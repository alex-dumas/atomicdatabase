<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="950" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="933.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="933.00"> </text><svg id="frames" x="10" width="1180" total_samples="873"><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.46%)</title><rect x="0.0000%" y="869" width="0.4582%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="4"/><text x="0.2500%" y="879.50"></text></g><g><title>&lt;atomicdatabase::database::DBValue as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="0.4582%" y="869" width="0.1145%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="1"/><text x="0.7082%" y="879.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="0.5727%" y="869" width="0.1145%" height="15" fill="rgb(221,193,54)" fg:x="5" fg:w="1"/><text x="0.8227%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.57%)</title><rect x="0.6873%" y="869" width="0.5727%" height="15" fill="rgb(248,212,6)" fg:x="6" fg:w="5"/><text x="0.9373%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="1.2600%" y="869" width="0.2291%" height="15" fill="rgb(208,68,35)" fg:x="11" fg:w="2"/><text x="1.5100%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="1.7182%" y="773" width="0.1145%" height="15" fill="rgb(232,128,0)" fg:x="15" fg:w="1"/><text x="1.9682%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="1.7182%" y="757" width="0.1145%" height="15" fill="rgb(207,160,47)" fg:x="15" fg:w="1"/><text x="1.9682%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="1.7182%" y="741" width="0.1145%" height="15" fill="rgb(228,23,34)" fg:x="15" fg:w="1"/><text x="1.9682%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="1.7182%" y="725" width="0.1145%" height="15" fill="rgb(218,30,26)" fg:x="15" fg:w="1"/><text x="1.9682%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="1.7182%" y="709" width="0.1145%" height="15" fill="rgb(220,122,19)" fg:x="15" fg:w="1"/><text x="1.9682%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="1.7182%" y="693" width="0.1145%" height="15" fill="rgb(250,228,42)" fg:x="15" fg:w="1"/><text x="1.9682%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.80%)</title><rect x="1.4891%" y="853" width="0.8018%" height="15" fill="rgb(240,193,28)" fg:x="13" fg:w="7"/><text x="1.7391%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.57%)</title><rect x="1.7182%" y="837" width="0.5727%" height="15" fill="rgb(216,20,37)" fg:x="15" fg:w="5"/><text x="1.9682%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.57%)</title><rect x="1.7182%" y="821" width="0.5727%" height="15" fill="rgb(206,188,39)" fg:x="15" fg:w="5"/><text x="1.9682%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.57%)</title><rect x="1.7182%" y="805" width="0.5727%" height="15" fill="rgb(217,207,13)" fg:x="15" fg:w="5"/><text x="1.9682%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.57%)</title><rect x="1.7182%" y="789" width="0.5727%" height="15" fill="rgb(231,73,38)" fg:x="15" fg:w="5"/><text x="1.9682%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.46%)</title><rect x="1.8328%" y="773" width="0.4582%" height="15" fill="rgb(225,20,46)" fg:x="16" fg:w="4"/><text x="2.0828%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.46%)</title><rect x="1.8328%" y="757" width="0.4582%" height="15" fill="rgb(210,31,41)" fg:x="16" fg:w="4"/><text x="2.0828%" y="767.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::BacktrackingQuery as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="2.2910%" y="853" width="0.1145%" height="15" fill="rgb(221,200,47)" fg:x="20" fg:w="1"/><text x="2.5410%" y="863.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::InnerFactPossibilitiesIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="2.4055%" y="853" width="0.1145%" height="15" fill="rgb(226,26,5)" fg:x="21" fg:w="1"/><text x="2.6555%" y="863.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="2.5200%" y="853" width="0.1145%" height="15" fill="rgb(249,33,26)" fg:x="22" fg:w="1"/><text x="2.7700%" y="863.50"></text></g><g><title>&lt;atomicdatabase::database::unification::ASTValue as core::clone::Clone&gt;::clone (3 samples, 0.34%)</title><rect x="2.6346%" y="853" width="0.3436%" height="15" fill="rgb(235,183,28)" fg:x="23" fg:w="3"/><text x="2.8846%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.23%)</title><rect x="2.9782%" y="853" width="0.2291%" height="15" fill="rgb(221,5,38)" fg:x="26" fg:w="2"/><text x="3.2282%" y="863.50"></text></g><g><title>_ZN72_$LT$atomicdatabase..database..DBValue$u20$as$u20$core..clone..Clone$GT$5clone17heaa4f8ffffde10d3E.llvm.2414314873794538956 (3 samples, 0.34%)</title><rect x="3.2073%" y="853" width="0.3436%" height="15" fill="rgb(247,18,42)" fg:x="28" fg:w="3"/><text x="3.4573%" y="863.50"></text></g><g><title>_ZN7dashmap24DashMap$LT$K$C$V$C$S$GT$10hash_usize17h3aec2b0458dda4b9E.llvm.14781992193672218318 (2 samples, 0.23%)</title><rect x="3.5510%" y="853" width="0.2291%" height="15" fill="rgb(241,131,45)" fg:x="31" fg:w="2"/><text x="3.8010%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="3.7801%" y="853" width="0.1145%" height="15" fill="rgb(249,31,29)" fg:x="33" fg:w="1"/><text x="4.0301%" y="863.50"></text></g><g><title>_int_free (13 samples, 1.49%)</title><rect x="3.8946%" y="853" width="1.4891%" height="15" fill="rgb(225,111,53)" fg:x="34" fg:w="13"/><text x="4.1446%" y="863.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.11%)</title><rect x="5.3837%" y="853" width="0.1145%" height="15" fill="rgb(238,160,17)" fg:x="47" fg:w="1"/><text x="5.6337%" y="863.50"></text></g><g><title>atomicdatabase::database::unification::unify_terms (4 samples, 0.46%)</title><rect x="5.4983%" y="853" width="0.4582%" height="15" fill="rgb(214,148,48)" fg:x="48" fg:w="4"/><text x="5.7483%" y="863.50"></text></g><g><title>cfree@GLIBC_2.2.5 (6 samples, 0.69%)</title><rect x="5.9565%" y="853" width="0.6873%" height="15" fill="rgb(232,36,49)" fg:x="52" fg:w="6"/><text x="6.2065%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.23%)</title><rect x="6.6438%" y="853" width="0.2291%" height="15" fill="rgb(209,103,24)" fg:x="58" fg:w="2"/><text x="6.8938%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.11%)</title><rect x="6.8729%" y="853" width="0.1145%" height="15" fill="rgb(229,88,8)" fg:x="60" fg:w="1"/><text x="7.1229%" y="863.50"></text></g><g><title>[[heap]] (58 samples, 6.64%)</title><rect x="1.4891%" y="869" width="6.6438%" height="15" fill="rgb(213,181,19)" fg:x="13" fg:w="58"/><text x="1.7391%" y="879.50">[[heap]]</text></g><g><title>malloc (10 samples, 1.15%)</title><rect x="6.9874%" y="853" width="1.1455%" height="15" fill="rgb(254,191,54)" fg:x="61" fg:w="10"/><text x="7.2374%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="8.3620%" y="773" width="0.1145%" height="15" fill="rgb(241,83,37)" fg:x="73" fg:w="1"/><text x="8.6120%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="8.3620%" y="757" width="0.1145%" height="15" fill="rgb(233,36,39)" fg:x="73" fg:w="1"/><text x="8.6120%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="8.3620%" y="741" width="0.1145%" height="15" fill="rgb(226,3,54)" fg:x="73" fg:w="1"/><text x="8.6120%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="8.3620%" y="725" width="0.1145%" height="15" fill="rgb(245,192,40)" fg:x="73" fg:w="1"/><text x="8.6120%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="8.3620%" y="709" width="0.1145%" height="15" fill="rgb(238,167,29)" fg:x="73" fg:w="1"/><text x="8.6120%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="8.3620%" y="693" width="0.1145%" height="15" fill="rgb(232,182,51)" fg:x="73" fg:w="1"/><text x="8.6120%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.80%)</title><rect x="8.1329%" y="853" width="0.8018%" height="15" fill="rgb(231,60,39)" fg:x="71" fg:w="7"/><text x="8.3829%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.57%)</title><rect x="8.3620%" y="837" width="0.5727%" height="15" fill="rgb(208,69,12)" fg:x="73" fg:w="5"/><text x="8.6120%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.57%)</title><rect x="8.3620%" y="821" width="0.5727%" height="15" fill="rgb(235,93,37)" fg:x="73" fg:w="5"/><text x="8.6120%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.57%)</title><rect x="8.3620%" y="805" width="0.5727%" height="15" fill="rgb(213,116,39)" fg:x="73" fg:w="5"/><text x="8.6120%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.57%)</title><rect x="8.3620%" y="789" width="0.5727%" height="15" fill="rgb(222,207,29)" fg:x="73" fg:w="5"/><text x="8.6120%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.46%)</title><rect x="8.4765%" y="773" width="0.4582%" height="15" fill="rgb(206,96,30)" fg:x="74" fg:w="4"/><text x="8.7265%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.46%)</title><rect x="8.4765%" y="757" width="0.4582%" height="15" fill="rgb(218,138,4)" fg:x="74" fg:w="4"/><text x="8.7265%" y="767.50"></text></g><g><title>&lt;atomicdatabase::database::DBValue as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="8.9347%" y="853" width="0.1145%" height="15" fill="rgb(250,191,14)" fg:x="78" fg:w="1"/><text x="9.1847%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.46%)</title><rect x="9.0493%" y="853" width="0.4582%" height="15" fill="rgb(239,60,40)" fg:x="79" fg:w="4"/><text x="9.2993%" y="863.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17hc74b6d940613d662E.llvm.15422632318813216770 (1 samples, 0.11%)</title><rect x="9.5074%" y="853" width="0.1145%" height="15" fill="rgb(206,27,48)" fg:x="83" fg:w="1"/><text x="9.7574%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="9.6220%" y="853" width="0.1145%" height="15" fill="rgb(225,35,8)" fg:x="84" fg:w="1"/><text x="9.8720%" y="863.50"></text></g><g><title>_int_free (8 samples, 0.92%)</title><rect x="9.7365%" y="853" width="0.9164%" height="15" fill="rgb(250,213,24)" fg:x="85" fg:w="8"/><text x="9.9865%" y="863.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.23%)</title><rect x="10.6529%" y="853" width="0.2291%" height="15" fill="rgb(247,123,22)" fg:x="93" fg:w="2"/><text x="10.9029%" y="863.50"></text></g><g><title>atomicdatabase::database::unification::unify_terms (1 samples, 0.11%)</title><rect x="10.8820%" y="853" width="0.1145%" height="15" fill="rgb(231,138,38)" fg:x="95" fg:w="1"/><text x="11.1320%" y="863.50"></text></g><g><title>atomicdatabase::database::unification::unify_variable_literal (2 samples, 0.23%)</title><rect x="10.9966%" y="853" width="0.2291%" height="15" fill="rgb(231,145,46)" fg:x="96" fg:w="2"/><text x="11.2466%" y="863.50"></text></g><g><title>cfree@GLIBC_2.2.5 (4 samples, 0.46%)</title><rect x="11.2257%" y="853" width="0.4582%" height="15" fill="rgb(251,118,11)" fg:x="98" fg:w="4"/><text x="11.4757%" y="863.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.34%)</title><rect x="11.6838%" y="853" width="0.3436%" height="15" fill="rgb(217,147,25)" fg:x="102" fg:w="3"/><text x="11.9338%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;atomicdatabase::database::DBValue&gt; (1 samples, 0.11%)</title><rect x="12.0275%" y="853" width="0.1145%" height="15" fill="rgb(247,81,37)" fg:x="105" fg:w="1"/><text x="12.2775%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;atomicdatabase::database::unification::ASTValue&gt; (1 samples, 0.11%)</title><rect x="12.1420%" y="853" width="0.1145%" height="15" fill="rgb(209,12,38)" fg:x="106" fg:w="1"/><text x="12.3920%" y="863.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.11%)</title><rect x="12.2566%" y="853" width="0.1145%" height="15" fill="rgb(227,1,9)" fg:x="107" fg:w="1"/><text x="12.5066%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (3 samples, 0.34%)</title><rect x="12.3711%" y="853" width="0.3436%" height="15" fill="rgb(248,47,43)" fg:x="108" fg:w="3"/><text x="12.6211%" y="863.50"></text></g><g><title>[[stack]] (42 samples, 4.81%)</title><rect x="8.1329%" y="869" width="4.8110%" height="15" fill="rgb(221,10,30)" fg:x="71" fg:w="42"/><text x="8.3829%" y="879.50">[[stac..</text></g><g><title>malloc (2 samples, 0.23%)</title><rect x="12.7148%" y="853" width="0.2291%" height="15" fill="rgb(210,229,1)" fg:x="111" fg:w="2"/><text x="12.9648%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="12.9439%" y="853" width="0.1145%" height="15" fill="rgb(222,148,37)" fg:x="113" fg:w="1"/><text x="13.1939%" y="863.50"></text></g><g><title>[atomicdatabase] (1 samples, 0.11%)</title><rect x="13.0584%" y="853" width="0.1145%" height="15" fill="rgb(234,67,33)" fg:x="114" fg:w="1"/><text x="13.3084%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="13.0584%" y="837" width="0.1145%" height="15" fill="rgb(247,98,35)" fg:x="114" fg:w="1"/><text x="13.3084%" y="847.50"></text></g><g><title>[atomicdatabase] (4 samples, 0.46%)</title><rect x="12.9439%" y="869" width="0.4582%" height="15" fill="rgb(247,138,52)" fg:x="113" fg:w="4"/><text x="13.1939%" y="879.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.23%)</title><rect x="13.1730%" y="853" width="0.2291%" height="15" fill="rgb(213,79,30)" fg:x="115" fg:w="2"/><text x="13.4230%" y="863.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="13.5166%" y="853" width="0.1145%" height="15" fill="rgb(246,177,23)" fg:x="118" fg:w="1"/><text x="13.7666%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.34%)</title><rect x="14.5475%" y="773" width="0.3436%" height="15" fill="rgb(230,62,27)" fg:x="127" fg:w="3"/><text x="14.7975%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.34%)</title><rect x="14.5475%" y="757" width="0.3436%" height="15" fill="rgb(216,154,8)" fg:x="127" fg:w="3"/><text x="14.7975%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.34%)</title><rect x="14.5475%" y="741" width="0.3436%" height="15" fill="rgb(244,35,45)" fg:x="127" fg:w="3"/><text x="14.7975%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.34%)</title><rect x="14.5475%" y="725" width="0.3436%" height="15" fill="rgb(251,115,12)" fg:x="127" fg:w="3"/><text x="14.7975%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.34%)</title><rect x="14.5475%" y="709" width="0.3436%" height="15" fill="rgb(240,54,50)" fg:x="127" fg:w="3"/><text x="14.7975%" y="719.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.34%)</title><rect x="14.5475%" y="693" width="0.3436%" height="15" fill="rgb(233,84,52)" fg:x="127" fg:w="3"/><text x="14.7975%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (14 samples, 1.60%)</title><rect x="13.6312%" y="853" width="1.6037%" height="15" fill="rgb(207,117,47)" fg:x="119" fg:w="14"/><text x="13.8812%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.69%)</title><rect x="14.5475%" y="837" width="0.6873%" height="15" fill="rgb(249,43,39)" fg:x="127" fg:w="6"/><text x="14.7975%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.69%)</title><rect x="14.5475%" y="821" width="0.6873%" height="15" fill="rgb(209,38,44)" fg:x="127" fg:w="6"/><text x="14.7975%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.69%)</title><rect x="14.5475%" y="805" width="0.6873%" height="15" fill="rgb(236,212,23)" fg:x="127" fg:w="6"/><text x="14.7975%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.69%)</title><rect x="14.5475%" y="789" width="0.6873%" height="15" fill="rgb(242,79,21)" fg:x="127" fg:w="6"/><text x="14.7975%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.34%)</title><rect x="14.8912%" y="773" width="0.3436%" height="15" fill="rgb(211,96,35)" fg:x="130" fg:w="3"/><text x="15.1412%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.34%)</title><rect x="14.8912%" y="757" width="0.3436%" height="15" fill="rgb(253,215,40)" fg:x="130" fg:w="3"/><text x="15.1412%" y="767.50"></text></g><g><title>&lt;atomicdatabase::database::unification::ASTValue as core::clone::Clone&gt;::clone (4 samples, 0.46%)</title><rect x="15.2348%" y="853" width="0.4582%" height="15" fill="rgb(211,81,21)" fg:x="133" fg:w="4"/><text x="15.4848%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.23%)</title><rect x="15.6930%" y="853" width="0.2291%" height="15" fill="rgb(208,190,38)" fg:x="137" fg:w="2"/><text x="15.9430%" y="863.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.23%)</title><rect x="15.9221%" y="853" width="0.2291%" height="15" fill="rgb(235,213,38)" fg:x="139" fg:w="2"/><text x="16.1721%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="16.1512%" y="853" width="0.2291%" height="15" fill="rgb(237,122,38)" fg:x="141" fg:w="2"/><text x="16.4012%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V&gt; as core::convert::From&lt;[(K,V): N]&gt;&gt;::from (1 samples, 0.11%)</title><rect x="16.3803%" y="853" width="0.1145%" height="15" fill="rgb(244,218,35)" fg:x="143" fg:w="1"/><text x="16.6303%" y="863.50"></text></g><g><title>_ZN4core3ptr68drop_in_place$LT$atomicdatabase..database..unification..ASTValue$GT$17h0cc24a977eca2ee9E.llvm.15422632318813216770 (2 samples, 0.23%)</title><rect x="16.4948%" y="853" width="0.2291%" height="15" fill="rgb(240,68,47)" fg:x="144" fg:w="2"/><text x="16.7448%" y="863.50"></text></g><g><title>_ZN72_$LT$atomicdatabase..database..DBValue$u20$as$u20$core..clone..Clone$GT$5clone17heaa4f8ffffde10d3E.llvm.2414314873794538956 (3 samples, 0.34%)</title><rect x="16.7239%" y="853" width="0.3436%" height="15" fill="rgb(210,16,53)" fg:x="146" fg:w="3"/><text x="16.9739%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.34%)</title><rect x="17.0676%" y="853" width="0.3436%" height="15" fill="rgb(235,124,12)" fg:x="149" fg:w="3"/><text x="17.3176%" y="863.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="17.4112%" y="853" width="0.1145%" height="15" fill="rgb(224,169,11)" fg:x="152" fg:w="1"/><text x="17.6612%" y="863.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="17.4112%" y="837" width="0.1145%" height="15" fill="rgb(250,166,2)" fg:x="152" fg:w="1"/><text x="17.6612%" y="847.50"></text></g><g><title>_int_free (12 samples, 1.37%)</title><rect x="17.5258%" y="853" width="1.3746%" height="15" fill="rgb(242,216,29)" fg:x="153" fg:w="12"/><text x="17.7758%" y="863.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.11%)</title><rect x="18.9003%" y="853" width="0.1145%" height="15" fill="rgb(230,116,27)" fg:x="165" fg:w="1"/><text x="19.1503%" y="863.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.23%)</title><rect x="19.0149%" y="853" width="0.2291%" height="15" fill="rgb(228,99,48)" fg:x="166" fg:w="2"/><text x="19.2649%" y="863.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.11%)</title><rect x="19.2440%" y="853" width="0.1145%" height="15" fill="rgb(253,11,6)" fg:x="168" fg:w="1"/><text x="19.4940%" y="863.50"></text></g><g><title>atomicdatabase::database::unification::lax_unify (2 samples, 0.23%)</title><rect x="19.3585%" y="853" width="0.2291%" height="15" fill="rgb(247,143,39)" fg:x="169" fg:w="2"/><text x="19.6085%" y="863.50"></text></g><g><title>cfree@GLIBC_2.2.5 (9 samples, 1.03%)</title><rect x="19.5876%" y="853" width="1.0309%" height="15" fill="rgb(236,97,10)" fg:x="171" fg:w="9"/><text x="19.8376%" y="863.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (2 samples, 0.23%)</title><rect x="20.6186%" y="853" width="0.2291%" height="15" fill="rgb(233,208,19)" fg:x="180" fg:w="2"/><text x="20.8686%" y="863.50"></text></g><g><title>[unknown] (73 samples, 8.36%)</title><rect x="13.4021%" y="869" width="8.3620%" height="15" fill="rgb(216,164,2)" fg:x="117" fg:w="73"/><text x="13.6521%" y="879.50">[unknown]</text></g><g><title>malloc (8 samples, 0.92%)</title><rect x="20.8477%" y="853" width="0.9164%" height="15" fill="rgb(220,129,5)" fg:x="182" fg:w="8"/><text x="21.0977%" y="863.50"></text></g><g><title>_ZN4core3ptr78drop_in_place$LT$$u5b$atomicdatabase..database..unification..ASTValue$u5d$$GT$17hff25821d9680c57fE.llvm.618350854987019679 (1 samples, 0.11%)</title><rect x="21.7640%" y="869" width="0.1145%" height="15" fill="rgb(242,17,10)" fg:x="190" fg:w="1"/><text x="22.0140%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="21.8786%" y="869" width="0.1145%" height="15" fill="rgb(242,107,0)" fg:x="191" fg:w="1"/><text x="22.1286%" y="879.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="21.9931%" y="869" width="0.1145%" height="15" fill="rgb(251,28,31)" fg:x="192" fg:w="1"/><text x="22.2431%" y="879.50"></text></g><g><title>atomicdatabase::database::parser::parse_file (1 samples, 0.11%)</title><rect x="22.5659%" y="613" width="0.1145%" height="15" fill="rgb(233,223,10)" fg:x="197" fg:w="1"/><text x="22.8159%" y="623.50"></text></g><g><title>atomicdatabase::database::parser::tokenize_line (1 samples, 0.11%)</title><rect x="22.5659%" y="597" width="0.1145%" height="15" fill="rgb(215,21,27)" fg:x="197" fg:w="1"/><text x="22.8159%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="22.5659%" y="581" width="0.1145%" height="15" fill="rgb(232,23,21)" fg:x="197" fg:w="1"/><text x="22.8159%" y="591.50"></text></g><g><title>malloc (1 samples, 0.11%)</title><rect x="22.5659%" y="565" width="0.1145%" height="15" fill="rgb(244,5,23)" fg:x="197" fg:w="1"/><text x="22.8159%" y="575.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="22.5659%" y="549" width="0.1145%" height="15" fill="rgb(226,81,46)" fg:x="197" fg:w="1"/><text x="22.8159%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="22.6804%" y="421" width="0.1145%" height="15" fill="rgb(247,70,30)" fg:x="198" fg:w="1"/><text x="22.9304%" y="431.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="22.6804%" y="405" width="0.1145%" height="15" fill="rgb(212,68,19)" fg:x="198" fg:w="1"/><text x="22.9304%" y="415.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="22.6804%" y="389" width="0.1145%" height="15" fill="rgb(240,187,13)" fg:x="198" fg:w="1"/><text x="22.9304%" y="399.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::InnerFactPossibilitiesIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="22.6804%" y="373" width="0.1145%" height="15" fill="rgb(223,113,26)" fg:x="198" fg:w="1"/><text x="22.9304%" y="383.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (1 samples, 0.11%)</title><rect x="22.6804%" y="357" width="0.1145%" height="15" fill="rgb(206,192,2)" fg:x="198" fg:w="1"/><text x="22.9304%" y="367.50"></text></g><g><title>_ZN7dashmap24DashMap$LT$K$C$V$C$S$GT$10hash_usize17h3aec2b0458dda4b9E.llvm.14781992193672218318 (1 samples, 0.11%)</title><rect x="22.6804%" y="341" width="0.1145%" height="15" fill="rgb(241,108,4)" fg:x="198" fg:w="1"/><text x="22.9304%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="22.6804%" y="325" width="0.1145%" height="15" fill="rgb(247,173,49)" fg:x="198" fg:w="1"/><text x="22.9304%" y="335.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="23.1386%" y="373" width="0.1145%" height="15" fill="rgb(224,114,35)" fg:x="202" fg:w="1"/><text x="23.3886%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.80%)</title><rect x="23.4822%" y="325" width="0.8018%" height="15" fill="rgb(245,159,27)" fg:x="205" fg:w="7"/><text x="23.7322%" y="335.50"></text></g><g><title>_ZN72_$LT$atomicdatabase..database..DBValue$u20$as$u20$core..clone..Clone$GT$5clone17heaa4f8ffffde10d3E.llvm.2414314873794538956 (4 samples, 0.46%)</title><rect x="23.8259%" y="309" width="0.4582%" height="15" fill="rgb(245,172,44)" fg:x="208" fg:w="4"/><text x="24.0759%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="24.1695%" y="293" width="0.1145%" height="15" fill="rgb(236,23,11)" fg:x="211" fg:w="1"/><text x="24.4195%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="24.1695%" y="277" width="0.1145%" height="15" fill="rgb(205,117,38)" fg:x="211" fg:w="1"/><text x="24.4195%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="24.1695%" y="261" width="0.1145%" height="15" fill="rgb(237,72,25)" fg:x="211" fg:w="1"/><text x="24.4195%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="24.1695%" y="245" width="0.1145%" height="15" fill="rgb(244,70,9)" fg:x="211" fg:w="1"/><text x="24.4195%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="24.1695%" y="229" width="0.1145%" height="15" fill="rgb(217,125,39)" fg:x="211" fg:w="1"/><text x="24.4195%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="24.1695%" y="213" width="0.1145%" height="15" fill="rgb(235,36,10)" fg:x="211" fg:w="1"/><text x="24.4195%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="24.1695%" y="197" width="0.1145%" height="15" fill="rgb(251,123,47)" fg:x="211" fg:w="1"/><text x="24.4195%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="24.1695%" y="181" width="0.1145%" height="15" fill="rgb(221,13,13)" fg:x="211" fg:w="1"/><text x="24.4195%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="24.1695%" y="165" width="0.1145%" height="15" fill="rgb(238,131,9)" fg:x="211" fg:w="1"/><text x="24.4195%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="24.1695%" y="149" width="0.1145%" height="15" fill="rgb(211,50,8)" fg:x="211" fg:w="1"/><text x="24.4195%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="24.1695%" y="133" width="0.1145%" height="15" fill="rgb(245,182,24)" fg:x="211" fg:w="1"/><text x="24.4195%" y="143.50"></text></g><g><title>malloc (1 samples, 0.11%)</title><rect x="24.1695%" y="117" width="0.1145%" height="15" fill="rgb(242,14,37)" fg:x="211" fg:w="1"/><text x="24.4195%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="24.3986%" y="213" width="0.1145%" height="15" fill="rgb(246,228,12)" fg:x="213" fg:w="1"/><text x="24.6486%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="24.3986%" y="197" width="0.1145%" height="15" fill="rgb(213,55,15)" fg:x="213" fg:w="1"/><text x="24.6486%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="24.3986%" y="181" width="0.1145%" height="15" fill="rgb(209,9,3)" fg:x="213" fg:w="1"/><text x="24.6486%" y="191.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.34%)</title><rect x="24.2841%" y="325" width="0.3436%" height="15" fill="rgb(230,59,30)" fg:x="212" fg:w="3"/><text x="24.5341%" y="335.50"></text></g><g><title>&lt;atomicdatabase::database::unification::ASTValue as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="24.3986%" y="309" width="0.2291%" height="15" fill="rgb(209,121,21)" fg:x="213" fg:w="2"/><text x="24.6486%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="24.3986%" y="293" width="0.2291%" height="15" fill="rgb(220,109,13)" fg:x="213" fg:w="2"/><text x="24.6486%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="24.3986%" y="277" width="0.2291%" height="15" fill="rgb(232,18,1)" fg:x="213" fg:w="2"/><text x="24.6486%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.23%)</title><rect x="24.3986%" y="261" width="0.2291%" height="15" fill="rgb(215,41,42)" fg:x="213" fg:w="2"/><text x="24.6486%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.23%)</title><rect x="24.3986%" y="245" width="0.2291%" height="15" fill="rgb(224,123,36)" fg:x="213" fg:w="2"/><text x="24.6486%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.23%)</title><rect x="24.3986%" y="229" width="0.2291%" height="15" fill="rgb(240,125,3)" fg:x="213" fg:w="2"/><text x="24.6486%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.11%)</title><rect x="24.5132%" y="213" width="0.1145%" height="15" fill="rgb(205,98,50)" fg:x="214" fg:w="1"/><text x="24.7632%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="24.5132%" y="197" width="0.1145%" height="15" fill="rgb(205,185,37)" fg:x="214" fg:w="1"/><text x="24.7632%" y="207.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="24.5132%" y="181" width="0.1145%" height="15" fill="rgb(238,207,15)" fg:x="214" fg:w="1"/><text x="24.7632%" y="191.50"></text></g><g><title>_ZN4core3ptr54drop_in_place$LT$atomicdatabase..database..DBValue$GT$17h85b73c21a594f16aE.llvm.618350854987019679 (1 samples, 0.11%)</title><rect x="24.6277%" y="309" width="0.1145%" height="15" fill="rgb(213,199,42)" fg:x="215" fg:w="1"/><text x="24.8777%" y="319.50"></text></g><g><title>_ZN4core3ptr78drop_in_place$LT$$u5b$atomicdatabase..database..unification..ASTValue$u5d$$GT$17hff25821d9680c57fE.llvm.618350854987019679 (2 samples, 0.23%)</title><rect x="24.6277%" y="325" width="0.2291%" height="15" fill="rgb(235,201,11)" fg:x="215" fg:w="2"/><text x="24.8777%" y="335.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="24.7423%" y="309" width="0.1145%" height="15" fill="rgb(207,46,11)" fg:x="216" fg:w="1"/><text x="24.9923%" y="319.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="24.7423%" y="293" width="0.1145%" height="15" fill="rgb(241,35,35)" fg:x="216" fg:w="1"/><text x="24.9923%" y="303.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="24.8568%" y="309" width="0.1145%" height="15" fill="rgb(243,32,47)" fg:x="217" fg:w="1"/><text x="25.1068%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="24.8568%" y="293" width="0.1145%" height="15" fill="rgb(247,202,23)" fg:x="217" fg:w="1"/><text x="25.1068%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.11%)</title><rect x="24.8568%" y="277" width="0.1145%" height="15" fill="rgb(219,102,11)" fg:x="217" fg:w="1"/><text x="25.1068%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="24.9714%" y="293" width="0.1145%" height="15" fill="rgb(243,110,44)" fg:x="218" fg:w="1"/><text x="25.2214%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="24.9714%" y="277" width="0.1145%" height="15" fill="rgb(222,74,54)" fg:x="218" fg:w="1"/><text x="25.2214%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="24.9714%" y="261" width="0.1145%" height="15" fill="rgb(216,99,12)" fg:x="218" fg:w="1"/><text x="25.2214%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="24.9714%" y="245" width="0.1145%" height="15" fill="rgb(226,22,26)" fg:x="218" fg:w="1"/><text x="25.2214%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="24.9714%" y="229" width="0.1145%" height="15" fill="rgb(217,163,10)" fg:x="218" fg:w="1"/><text x="25.2214%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="24.9714%" y="213" width="0.1145%" height="15" fill="rgb(213,25,53)" fg:x="218" fg:w="1"/><text x="25.2214%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="24.9714%" y="197" width="0.1145%" height="15" fill="rgb(252,105,26)" fg:x="218" fg:w="1"/><text x="25.2214%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="24.9714%" y="181" width="0.1145%" height="15" fill="rgb(220,39,43)" fg:x="218" fg:w="1"/><text x="25.2214%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="24.9714%" y="165" width="0.1145%" height="15" fill="rgb(229,68,48)" fg:x="218" fg:w="1"/><text x="25.2214%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="24.9714%" y="149" width="0.1145%" height="15" fill="rgb(252,8,32)" fg:x="218" fg:w="1"/><text x="25.2214%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="24.9714%" y="133" width="0.1145%" height="15" fill="rgb(223,20,43)" fg:x="218" fg:w="1"/><text x="25.2214%" y="143.50"></text></g><g><title>malloc (1 samples, 0.11%)</title><rect x="24.9714%" y="117" width="0.1145%" height="15" fill="rgb(229,81,49)" fg:x="218" fg:w="1"/><text x="25.2214%" y="127.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="24.9714%" y="101" width="0.1145%" height="15" fill="rgb(236,28,36)" fg:x="218" fg:w="1"/><text x="25.2214%" y="111.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.34%)</title><rect x="24.9714%" y="309" width="0.3436%" height="15" fill="rgb(249,185,26)" fg:x="218" fg:w="3"/><text x="25.2214%" y="319.50"></text></g><g><title>&lt;atomicdatabase::database::unification::ASTValue as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="25.0859%" y="293" width="0.2291%" height="15" fill="rgb(249,174,33)" fg:x="219" fg:w="2"/><text x="25.3359%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="25.0859%" y="277" width="0.2291%" height="15" fill="rgb(233,201,37)" fg:x="219" fg:w="2"/><text x="25.3359%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="25.2005%" y="261" width="0.1145%" height="15" fill="rgb(221,78,26)" fg:x="220" fg:w="1"/><text x="25.4505%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="25.2005%" y="245" width="0.1145%" height="15" fill="rgb(250,127,30)" fg:x="220" fg:w="1"/><text x="25.4505%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="25.2005%" y="229" width="0.1145%" height="15" fill="rgb(230,49,44)" fg:x="220" fg:w="1"/><text x="25.4505%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="25.2005%" y="213" width="0.1145%" height="15" fill="rgb(229,67,23)" fg:x="220" fg:w="1"/><text x="25.4505%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="25.2005%" y="197" width="0.1145%" height="15" fill="rgb(249,83,47)" fg:x="220" fg:w="1"/><text x="25.4505%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="25.2005%" y="181" width="0.1145%" height="15" fill="rgb(215,43,3)" fg:x="220" fg:w="1"/><text x="25.4505%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="25.2005%" y="165" width="0.1145%" height="15" fill="rgb(238,154,13)" fg:x="220" fg:w="1"/><text x="25.4505%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="25.2005%" y="149" width="0.1145%" height="15" fill="rgb(219,56,2)" fg:x="220" fg:w="1"/><text x="25.4505%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="25.2005%" y="133" width="0.1145%" height="15" fill="rgb(233,0,4)" fg:x="220" fg:w="1"/><text x="25.4505%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="25.2005%" y="117" width="0.1145%" height="15" fill="rgb(235,30,7)" fg:x="220" fg:w="1"/><text x="25.4505%" y="127.50"></text></g><g><title>malloc (1 samples, 0.11%)</title><rect x="25.2005%" y="101" width="0.1145%" height="15" fill="rgb(250,79,13)" fg:x="220" fg:w="1"/><text x="25.4505%" y="111.50"></text></g><g><title>__rust_dealloc (1 samples, 0.11%)</title><rect x="25.4296%" y="293" width="0.1145%" height="15" fill="rgb(211,146,34)" fg:x="222" fg:w="1"/><text x="25.6796%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.69%)</title><rect x="25.3150%" y="309" width="0.6873%" height="15" fill="rgb(228,22,38)" fg:x="221" fg:w="6"/><text x="25.5650%" y="319.50"></text></g><g><title>cfree@GLIBC_2.2.5 (4 samples, 0.46%)</title><rect x="25.5441%" y="293" width="0.4582%" height="15" fill="rgb(235,168,5)" fg:x="223" fg:w="4"/><text x="25.7941%" y="303.50"></text></g><g><title>_int_free (3 samples, 0.34%)</title><rect x="25.6586%" y="277" width="0.3436%" height="15" fill="rgb(221,155,16)" fg:x="224" fg:w="3"/><text x="25.9086%" y="287.50"></text></g><g><title>__rust_dealloc (1 samples, 0.11%)</title><rect x="26.0023%" y="309" width="0.1145%" height="15" fill="rgb(215,215,53)" fg:x="227" fg:w="1"/><text x="26.2523%" y="319.50"></text></g><g><title>&lt;atomicdatabase::database::DBValue as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="26.3459%" y="293" width="0.1145%" height="15" fill="rgb(223,4,10)" fg:x="230" fg:w="1"/><text x="26.5959%" y="303.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="26.3459%" y="277" width="0.1145%" height="15" fill="rgb(234,103,6)" fg:x="230" fg:w="1"/><text x="26.5959%" y="287.50"></text></g><g><title>alloc::str::convert_while_ascii (1 samples, 0.11%)</title><rect x="26.3459%" y="261" width="0.1145%" height="15" fill="rgb(227,97,0)" fg:x="230" fg:w="1"/><text x="26.5959%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="26.3459%" y="245" width="0.1145%" height="15" fill="rgb(234,150,53)" fg:x="230" fg:w="1"/><text x="26.5959%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="26.3459%" y="229" width="0.1145%" height="15" fill="rgb(228,201,54)" fg:x="230" fg:w="1"/><text x="26.5959%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="26.3459%" y="213" width="0.1145%" height="15" fill="rgb(222,22,37)" fg:x="230" fg:w="1"/><text x="26.5959%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="26.3459%" y="197" width="0.1145%" height="15" fill="rgb(237,53,32)" fg:x="230" fg:w="1"/><text x="26.5959%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="26.3459%" y="181" width="0.1145%" height="15" fill="rgb(233,25,53)" fg:x="230" fg:w="1"/><text x="26.5959%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="26.3459%" y="165" width="0.1145%" height="15" fill="rgb(210,40,34)" fg:x="230" fg:w="1"/><text x="26.5959%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="26.3459%" y="149" width="0.1145%" height="15" fill="rgb(241,220,44)" fg:x="230" fg:w="1"/><text x="26.5959%" y="159.50"></text></g><g><title>malloc (1 samples, 0.11%)</title><rect x="26.3459%" y="133" width="0.1145%" height="15" fill="rgb(235,28,35)" fg:x="230" fg:w="1"/><text x="26.5959%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="27.0332%" y="261" width="0.1145%" height="15" fill="rgb(210,56,17)" fg:x="236" fg:w="1"/><text x="27.2832%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="27.0332%" y="245" width="0.1145%" height="15" fill="rgb(224,130,29)" fg:x="236" fg:w="1"/><text x="27.2832%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="27.0332%" y="229" width="0.1145%" height="15" fill="rgb(235,212,8)" fg:x="236" fg:w="1"/><text x="27.2832%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="27.0332%" y="213" width="0.1145%" height="15" fill="rgb(223,33,50)" fg:x="236" fg:w="1"/><text x="27.2832%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="27.0332%" y="197" width="0.1145%" height="15" fill="rgb(219,149,13)" fg:x="236" fg:w="1"/><text x="27.2832%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="27.0332%" y="181" width="0.1145%" height="15" fill="rgb(250,156,29)" fg:x="236" fg:w="1"/><text x="27.2832%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="27.0332%" y="165" width="0.1145%" height="15" fill="rgb(216,193,19)" fg:x="236" fg:w="1"/><text x="27.2832%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="27.0332%" y="149" width="0.1145%" height="15" fill="rgb(216,135,14)" fg:x="236" fg:w="1"/><text x="27.2832%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="27.0332%" y="133" width="0.1145%" height="15" fill="rgb(241,47,5)" fg:x="236" fg:w="1"/><text x="27.2832%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="27.0332%" y="117" width="0.1145%" height="15" fill="rgb(233,42,35)" fg:x="236" fg:w="1"/><text x="27.2832%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="27.0332%" y="101" width="0.1145%" height="15" fill="rgb(231,13,6)" fg:x="236" fg:w="1"/><text x="27.2832%" y="111.50"></text></g><g><title>malloc (1 samples, 0.11%)</title><rect x="27.0332%" y="85" width="0.1145%" height="15" fill="rgb(207,181,40)" fg:x="236" fg:w="1"/><text x="27.2832%" y="95.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="27.0332%" y="69" width="0.1145%" height="15" fill="rgb(254,173,49)" fg:x="236" fg:w="1"/><text x="27.2832%" y="79.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.57%)</title><rect x="26.9187%" y="277" width="0.5727%" height="15" fill="rgb(221,1,38)" fg:x="235" fg:w="5"/><text x="27.1687%" y="287.50"></text></g><g><title>&lt;atomicdatabase::database::unification::ASTValue as core::clone::Clone&gt;::clone (3 samples, 0.34%)</title><rect x="27.1478%" y="261" width="0.3436%" height="15" fill="rgb(206,124,46)" fg:x="237" fg:w="3"/><text x="27.3978%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="27.2623%" y="245" width="0.2291%" height="15" fill="rgb(249,21,11)" fg:x="238" fg:w="2"/><text x="27.5123%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="27.2623%" y="229" width="0.2291%" height="15" fill="rgb(222,201,40)" fg:x="238" fg:w="2"/><text x="27.5123%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.23%)</title><rect x="27.2623%" y="213" width="0.2291%" height="15" fill="rgb(235,61,29)" fg:x="238" fg:w="2"/><text x="27.5123%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.23%)</title><rect x="27.2623%" y="197" width="0.2291%" height="15" fill="rgb(219,207,3)" fg:x="238" fg:w="2"/><text x="27.5123%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.23%)</title><rect x="27.2623%" y="181" width="0.2291%" height="15" fill="rgb(222,56,46)" fg:x="238" fg:w="2"/><text x="27.5123%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.23%)</title><rect x="27.2623%" y="165" width="0.2291%" height="15" fill="rgb(239,76,54)" fg:x="238" fg:w="2"/><text x="27.5123%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.23%)</title><rect x="27.2623%" y="149" width="0.2291%" height="15" fill="rgb(231,124,27)" fg:x="238" fg:w="2"/><text x="27.5123%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.23%)</title><rect x="27.2623%" y="133" width="0.2291%" height="15" fill="rgb(249,195,6)" fg:x="238" fg:w="2"/><text x="27.5123%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="27.3769%" y="117" width="0.1145%" height="15" fill="rgb(237,174,47)" fg:x="239" fg:w="1"/><text x="27.6269%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="27.3769%" y="101" width="0.1145%" height="15" fill="rgb(206,201,31)" fg:x="239" fg:w="1"/><text x="27.6269%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="27.3769%" y="85" width="0.1145%" height="15" fill="rgb(231,57,52)" fg:x="239" fg:w="1"/><text x="27.6269%" y="95.50"></text></g><g><title>malloc (1 samples, 0.11%)</title><rect x="27.3769%" y="69" width="0.1145%" height="15" fill="rgb(248,177,22)" fg:x="239" fg:w="1"/><text x="27.6269%" y="79.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="27.4914%" y="277" width="0.1145%" height="15" fill="rgb(215,211,37)" fg:x="240" fg:w="1"/><text x="27.7414%" y="287.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="27.4914%" y="261" width="0.1145%" height="15" fill="rgb(241,128,51)" fg:x="240" fg:w="1"/><text x="27.7414%" y="271.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="27.4914%" y="245" width="0.1145%" height="15" fill="rgb(227,165,31)" fg:x="240" fg:w="1"/><text x="27.7414%" y="255.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.23%)</title><rect x="27.6060%" y="277" width="0.2291%" height="15" fill="rgb(228,167,24)" fg:x="241" fg:w="2"/><text x="27.8560%" y="287.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="27.7205%" y="261" width="0.1145%" height="15" fill="rgb(228,143,12)" fg:x="242" fg:w="1"/><text x="27.9705%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.92%)</title><rect x="27.8351%" y="277" width="0.9164%" height="15" fill="rgb(249,149,8)" fg:x="243" fg:w="8"/><text x="28.0851%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.57%)</title><rect x="28.1787%" y="261" width="0.5727%" height="15" fill="rgb(243,35,44)" fg:x="246" fg:w="5"/><text x="28.4287%" y="271.50"></text></g><g><title>atomicdatabase::database::unification::unify_terms (25 samples, 2.86%)</title><rect x="26.1168%" y="309" width="2.8637%" height="15" fill="rgb(246,89,9)" fg:x="228" fg:w="25"/><text x="26.3668%" y="319.50">at..</text></g><g><title>atomicdatabase::database::unification::unify_variable_literal (22 samples, 2.52%)</title><rect x="26.4605%" y="293" width="2.5200%" height="15" fill="rgb(233,213,13)" fg:x="231" fg:w="22"/><text x="26.7105%" y="303.50">at..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (2 samples, 0.23%)</title><rect x="28.7514%" y="277" width="0.2291%" height="15" fill="rgb(233,141,41)" fg:x="251" fg:w="2"/><text x="29.0014%" y="287.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::InnerFactPossibilitiesIter as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 5.84%)</title><rect x="23.3677%" y="341" width="5.8419%" height="15" fill="rgb(239,167,4)" fg:x="204" fg:w="51"/><text x="23.6177%" y="351.50">&lt;atomic..</text></g><g><title>atomicdatabase::database::unification::lax_unify (38 samples, 4.35%)</title><rect x="24.8568%" y="325" width="4.3528%" height="15" fill="rgb(209,217,16)" fg:x="217" fg:w="38"/><text x="25.1068%" y="335.50">atomi..</text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.23%)</title><rect x="28.9805%" y="309" width="0.2291%" height="15" fill="rgb(219,88,35)" fg:x="253" fg:w="2"/><text x="29.2305%" y="319.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="29.0951%" y="293" width="0.1145%" height="15" fill="rgb(220,193,23)" fg:x="254" fg:w="1"/><text x="29.3451%" y="303.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 6.53%)</title><rect x="22.7950%" y="389" width="6.5292%" height="15" fill="rgb(230,90,52)" fg:x="199" fg:w="57"/><text x="23.0450%" y="399.50">&lt;atomicda..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 6.07%)</title><rect x="23.2532%" y="373" width="6.0710%" height="15" fill="rgb(252,106,19)" fg:x="203" fg:w="53"/><text x="23.5032%" y="383.50">&lt;core::i..</text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 6.07%)</title><rect x="23.2532%" y="357" width="6.0710%" height="15" fill="rgb(206,74,20)" fg:x="203" fg:w="53"/><text x="23.5032%" y="367.50">&lt;atomicd..</text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.11%)</title><rect x="29.2096%" y="341" width="0.1145%" height="15" fill="rgb(230,138,44)" fg:x="255" fg:w="1"/><text x="29.4596%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="29.2096%" y="325" width="0.1145%" height="15" fill="rgb(235,182,43)" fg:x="255" fg:w="1"/><text x="29.4596%" y="335.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::BacktrackingQuery as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 6.64%)</title><rect x="22.7950%" y="405" width="6.6438%" height="15" fill="rgb(242,16,51)" fg:x="199" fg:w="58"/><text x="23.0450%" y="415.50">&lt;atomicda..</text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="29.3242%" y="389" width="0.1145%" height="15" fill="rgb(248,9,4)" fg:x="256" fg:w="1"/><text x="29.5742%" y="399.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 6.87%)</title><rect x="22.6804%" y="437" width="6.8729%" height="15" fill="rgb(210,31,22)" fg:x="198" fg:w="60"/><text x="22.9304%" y="447.50">&lt;atomicda..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 6.76%)</title><rect x="22.7950%" y="421" width="6.7583%" height="15" fill="rgb(239,54,39)" fg:x="199" fg:w="59"/><text x="23.0450%" y="431.50">&lt;core::it..</text></g><g><title>atomicdatabase::database::unification::unify_get_variable_value (1 samples, 0.11%)</title><rect x="29.4387%" y="405" width="0.1145%" height="15" fill="rgb(230,99,41)" fg:x="257" fg:w="1"/><text x="29.6887%" y="415.50"></text></g><g><title>atomicdatabase::database::unification::unify_terms (1 samples, 0.11%)</title><rect x="29.4387%" y="389" width="0.1145%" height="15" fill="rgb(253,106,12)" fg:x="257" fg:w="1"/><text x="29.6887%" y="399.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="29.4387%" y="373" width="0.1145%" height="15" fill="rgb(213,46,41)" fg:x="257" fg:w="1"/><text x="29.6887%" y="383.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="29.4387%" y="357" width="0.1145%" height="15" fill="rgb(215,133,35)" fg:x="257" fg:w="1"/><text x="29.6887%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="29.6678%" y="341" width="0.1145%" height="15" fill="rgb(213,28,5)" fg:x="259" fg:w="1"/><text x="29.9178%" y="351.50"></text></g><g><title>_ZN72_$LT$atomicdatabase..database..DBValue$u20$as$u20$core..clone..Clone$GT$5clone17heaa4f8ffffde10d3E.llvm.2414314873794538956 (1 samples, 0.11%)</title><rect x="29.6678%" y="325" width="0.1145%" height="15" fill="rgb(215,77,49)" fg:x="259" fg:w="1"/><text x="29.9178%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="29.6678%" y="309" width="0.1145%" height="15" fill="rgb(248,100,22)" fg:x="259" fg:w="1"/><text x="29.9178%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="29.6678%" y="293" width="0.1145%" height="15" fill="rgb(208,67,9)" fg:x="259" fg:w="1"/><text x="29.9178%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="29.6678%" y="277" width="0.1145%" height="15" fill="rgb(219,133,21)" fg:x="259" fg:w="1"/><text x="29.9178%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="29.6678%" y="261" width="0.1145%" height="15" fill="rgb(246,46,29)" fg:x="259" fg:w="1"/><text x="29.9178%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="29.6678%" y="245" width="0.1145%" height="15" fill="rgb(246,185,52)" fg:x="259" fg:w="1"/><text x="29.9178%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.11%)</title><rect x="29.6678%" y="229" width="0.1145%" height="15" fill="rgb(252,136,11)" fg:x="259" fg:w="1"/><text x="29.9178%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="29.6678%" y="213" width="0.1145%" height="15" fill="rgb(219,138,53)" fg:x="259" fg:w="1"/><text x="29.9178%" y="223.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="29.6678%" y="197" width="0.1145%" height="15" fill="rgb(211,51,23)" fg:x="259" fg:w="1"/><text x="29.9178%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="29.7824%" y="341" width="0.1145%" height="15" fill="rgb(247,221,28)" fg:x="260" fg:w="1"/><text x="30.0324%" y="351.50"></text></g><g><title>&lt;atomicdatabase::database::unification::ASTValue as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="29.7824%" y="325" width="0.1145%" height="15" fill="rgb(251,222,45)" fg:x="260" fg:w="1"/><text x="30.0324%" y="335.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.11%)</title><rect x="29.8969%" y="325" width="0.1145%" height="15" fill="rgb(217,162,53)" fg:x="261" fg:w="1"/><text x="30.1469%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.11%)</title><rect x="29.8969%" y="309" width="0.1145%" height="15" fill="rgb(229,93,14)" fg:x="261" fg:w="1"/><text x="30.1469%" y="319.50"></text></g><g><title>_ZN4core3ptr78drop_in_place$LT$$u5b$atomicdatabase..database..unification..ASTValue$u5d$$GT$17hff25821d9680c57fE.llvm.618350854987019679 (2 samples, 0.23%)</title><rect x="29.8969%" y="341" width="0.2291%" height="15" fill="rgb(209,67,49)" fg:x="261" fg:w="2"/><text x="30.1469%" y="351.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="30.0115%" y="325" width="0.1145%" height="15" fill="rgb(213,87,29)" fg:x="262" fg:w="1"/><text x="30.2615%" y="335.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="30.0115%" y="309" width="0.1145%" height="15" fill="rgb(205,151,52)" fg:x="262" fg:w="1"/><text x="30.2615%" y="319.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="30.3551%" y="325" width="0.1145%" height="15" fill="rgb(253,215,39)" fg:x="265" fg:w="1"/><text x="30.6051%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="30.4696%" y="325" width="0.2291%" height="15" fill="rgb(221,220,41)" fg:x="266" fg:w="2"/><text x="30.7196%" y="335.50"></text></g><g><title>[atomicdatabase] (1 samples, 0.11%)</title><rect x="30.6987%" y="309" width="0.1145%" height="15" fill="rgb(218,133,21)" fg:x="268" fg:w="1"/><text x="30.9487%" y="319.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="30.6987%" y="293" width="0.1145%" height="15" fill="rgb(221,193,43)" fg:x="268" fg:w="1"/><text x="30.9487%" y="303.50"></text></g><g><title>_ZN4core3ptr68drop_in_place$LT$atomicdatabase..database..unification..ASTValue$GT$17h0cc24a977eca2ee9E.llvm.15422632318813216770 (1 samples, 0.11%)</title><rect x="30.8133%" y="309" width="0.1145%" height="15" fill="rgb(240,128,52)" fg:x="269" fg:w="1"/><text x="31.0633%" y="319.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.11%)</title><rect x="30.9278%" y="309" width="0.1145%" height="15" fill="rgb(253,114,12)" fg:x="270" fg:w="1"/><text x="31.1778%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.11%)</title><rect x="30.9278%" y="293" width="0.1145%" height="15" fill="rgb(215,223,47)" fg:x="270" fg:w="1"/><text x="31.1778%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.69%)</title><rect x="30.6987%" y="325" width="0.6873%" height="15" fill="rgb(248,225,23)" fg:x="268" fg:w="6"/><text x="30.9487%" y="335.50"></text></g><g><title>cfree@GLIBC_2.2.5 (3 samples, 0.34%)</title><rect x="31.0424%" y="309" width="0.3436%" height="15" fill="rgb(250,108,0)" fg:x="271" fg:w="3"/><text x="31.2924%" y="319.50"></text></g><g><title>_int_free (3 samples, 0.34%)</title><rect x="31.0424%" y="293" width="0.3436%" height="15" fill="rgb(228,208,7)" fg:x="271" fg:w="3"/><text x="31.2924%" y="303.50"></text></g><g><title>&lt;atomicdatabase::database::DBValue as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="31.3860%" y="309" width="0.1145%" height="15" fill="rgb(244,45,10)" fg:x="274" fg:w="1"/><text x="31.6360%" y="319.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="31.3860%" y="293" width="0.1145%" height="15" fill="rgb(207,125,25)" fg:x="274" fg:w="1"/><text x="31.6360%" y="303.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.11%)</title><rect x="31.3860%" y="277" width="0.1145%" height="15" fill="rgb(210,195,18)" fg:x="274" fg:w="1"/><text x="31.6360%" y="287.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.11%)</title><rect x="31.3860%" y="261" width="0.1145%" height="15" fill="rgb(249,80,12)" fg:x="274" fg:w="1"/><text x="31.6360%" y="271.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.11%)</title><rect x="31.3860%" y="245" width="0.1145%" height="15" fill="rgb(221,65,9)" fg:x="274" fg:w="1"/><text x="31.6360%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="31.5006%" y="277" width="0.1145%" height="15" fill="rgb(235,49,36)" fg:x="275" fg:w="1"/><text x="31.7506%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="31.5006%" y="293" width="0.2291%" height="15" fill="rgb(225,32,20)" fg:x="275" fg:w="2"/><text x="31.7506%" y="303.50"></text></g><g><title>&lt;atomicdatabase::database::unification::ASTValue as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="31.6151%" y="277" width="0.1145%" height="15" fill="rgb(215,141,46)" fg:x="276" fg:w="1"/><text x="31.8651%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="31.6151%" y="261" width="0.1145%" height="15" fill="rgb(250,160,47)" fg:x="276" fg:w="1"/><text x="31.8651%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="31.6151%" y="245" width="0.1145%" height="15" fill="rgb(216,222,40)" fg:x="276" fg:w="1"/><text x="31.8651%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="31.6151%" y="229" width="0.1145%" height="15" fill="rgb(234,217,39)" fg:x="276" fg:w="1"/><text x="31.8651%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="31.6151%" y="213" width="0.1145%" height="15" fill="rgb(207,178,40)" fg:x="276" fg:w="1"/><text x="31.8651%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="31.6151%" y="197" width="0.1145%" height="15" fill="rgb(221,136,13)" fg:x="276" fg:w="1"/><text x="31.8651%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="31.6151%" y="181" width="0.1145%" height="15" fill="rgb(249,199,10)" fg:x="276" fg:w="1"/><text x="31.8651%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="31.6151%" y="165" width="0.1145%" height="15" fill="rgb(249,222,13)" fg:x="276" fg:w="1"/><text x="31.8651%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="31.6151%" y="149" width="0.1145%" height="15" fill="rgb(244,185,38)" fg:x="276" fg:w="1"/><text x="31.8651%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="31.6151%" y="133" width="0.1145%" height="15" fill="rgb(236,202,9)" fg:x="276" fg:w="1"/><text x="31.8651%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="31.6151%" y="117" width="0.1145%" height="15" fill="rgb(250,229,37)" fg:x="276" fg:w="1"/><text x="31.8651%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="31.6151%" y="101" width="0.1145%" height="15" fill="rgb(206,174,23)" fg:x="276" fg:w="1"/><text x="31.8651%" y="111.50"></text></g><g><title>malloc (1 samples, 0.11%)</title><rect x="31.6151%" y="85" width="0.1145%" height="15" fill="rgb(211,33,43)" fg:x="276" fg:w="1"/><text x="31.8651%" y="95.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.23%)</title><rect x="31.7297%" y="293" width="0.2291%" height="15" fill="rgb(245,58,50)" fg:x="277" fg:w="2"/><text x="31.9797%" y="303.50"></text></g><g><title>_int_free (2 samples, 0.23%)</title><rect x="31.7297%" y="277" width="0.2291%" height="15" fill="rgb(244,68,36)" fg:x="277" fg:w="2"/><text x="31.9797%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.69%)</title><rect x="31.9588%" y="293" width="0.6873%" height="15" fill="rgb(232,229,15)" fg:x="279" fg:w="6"/><text x="32.2088%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.34%)</title><rect x="32.3024%" y="277" width="0.3436%" height="15" fill="rgb(254,30,23)" fg:x="282" fg:w="3"/><text x="32.5524%" y="287.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::BacktrackingQuery as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 3.21%)</title><rect x="29.5533%" y="421" width="3.2073%" height="15" fill="rgb(235,160,14)" fg:x="258" fg:w="28"/><text x="29.8033%" y="431.50">&lt;at..</text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 3.21%)</title><rect x="29.5533%" y="405" width="3.2073%" height="15" fill="rgb(212,155,44)" fg:x="258" fg:w="28"/><text x="29.8033%" y="415.50">&lt;at..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 3.21%)</title><rect x="29.5533%" y="389" width="3.2073%" height="15" fill="rgb(226,2,50)" fg:x="258" fg:w="28"/><text x="29.8033%" y="399.50">&lt;co..</text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 3.09%)</title><rect x="29.6678%" y="373" width="3.0928%" height="15" fill="rgb(234,177,6)" fg:x="259" fg:w="27"/><text x="29.9178%" y="383.50">&lt;at..</text></g><g><title>&lt;atomicdatabase::database::backtracking::InnerFactPossibilitiesIter as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 3.09%)</title><rect x="29.6678%" y="357" width="3.0928%" height="15" fill="rgb(217,24,9)" fg:x="259" fg:w="27"/><text x="29.9178%" y="367.50">&lt;at..</text></g><g><title>atomicdatabase::database::unification::lax_unify (23 samples, 2.63%)</title><rect x="30.1260%" y="341" width="2.6346%" height="15" fill="rgb(220,13,46)" fg:x="263" fg:w="23"/><text x="30.3760%" y="351.50">at..</text></g><g><title>atomicdatabase::database::unification::unify_terms (12 samples, 1.37%)</title><rect x="31.3860%" y="325" width="1.3746%" height="15" fill="rgb(239,221,27)" fg:x="274" fg:w="12"/><text x="31.6360%" y="335.50"></text></g><g><title>atomicdatabase::database::unification::unify_variable_literal (11 samples, 1.26%)</title><rect x="31.5006%" y="309" width="1.2600%" height="15" fill="rgb(222,198,25)" fg:x="275" fg:w="11"/><text x="31.7506%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.11%)</title><rect x="32.6460%" y="293" width="0.1145%" height="15" fill="rgb(211,99,13)" fg:x="285" fg:w="1"/><text x="32.8960%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 3.32%)</title><rect x="29.5533%" y="437" width="3.3219%" height="15" fill="rgb(232,111,31)" fg:x="258" fg:w="29"/><text x="29.8033%" y="447.50">&lt;co..</text></g><g><title>atomicdatabase::database::unification::unify_get_variable_value (1 samples, 0.11%)</title><rect x="32.7606%" y="421" width="0.1145%" height="15" fill="rgb(245,82,37)" fg:x="286" fg:w="1"/><text x="33.0106%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="32.7606%" y="405" width="0.1145%" height="15" fill="rgb(227,149,46)" fg:x="286" fg:w="1"/><text x="33.0106%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="32.7606%" y="389" width="0.1145%" height="15" fill="rgb(218,36,50)" fg:x="286" fg:w="1"/><text x="33.0106%" y="399.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (1 samples, 0.11%)</title><rect x="32.7606%" y="373" width="0.1145%" height="15" fill="rgb(226,80,48)" fg:x="286" fg:w="1"/><text x="33.0106%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (2 samples, 0.23%)</title><rect x="32.8751%" y="405" width="0.2291%" height="15" fill="rgb(238,224,15)" fg:x="287" fg:w="2"/><text x="33.1251%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.23%)</title><rect x="32.8751%" y="389" width="0.2291%" height="15" fill="rgb(241,136,10)" fg:x="287" fg:w="2"/><text x="33.1251%" y="399.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (1 samples, 0.11%)</title><rect x="32.9897%" y="373" width="0.1145%" height="15" fill="rgb(208,32,45)" fg:x="288" fg:w="1"/><text x="33.2397%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="33.1042%" y="389" width="0.1145%" height="15" fill="rgb(207,135,9)" fg:x="289" fg:w="1"/><text x="33.3542%" y="399.50"></text></g><g><title>&lt;atomicdatabase::database::unification::ASTValue as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="33.1042%" y="373" width="0.1145%" height="15" fill="rgb(206,86,44)" fg:x="289" fg:w="1"/><text x="33.3542%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="33.1042%" y="357" width="0.1145%" height="15" fill="rgb(245,177,15)" fg:x="289" fg:w="1"/><text x="33.3542%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="33.1042%" y="341" width="0.1145%" height="15" fill="rgb(206,64,50)" fg:x="289" fg:w="1"/><text x="33.3542%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="33.1042%" y="325" width="0.1145%" height="15" fill="rgb(234,36,40)" fg:x="289" fg:w="1"/><text x="33.3542%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="33.1042%" y="309" width="0.1145%" height="15" fill="rgb(213,64,8)" fg:x="289" fg:w="1"/><text x="33.3542%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="33.1042%" y="293" width="0.1145%" height="15" fill="rgb(210,75,36)" fg:x="289" fg:w="1"/><text x="33.3542%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="33.1042%" y="277" width="0.1145%" height="15" fill="rgb(229,88,21)" fg:x="289" fg:w="1"/><text x="33.3542%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="33.1042%" y="261" width="0.1145%" height="15" fill="rgb(252,204,47)" fg:x="289" fg:w="1"/><text x="33.3542%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="33.1042%" y="245" width="0.1145%" height="15" fill="rgb(208,77,27)" fg:x="289" fg:w="1"/><text x="33.3542%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="33.1042%" y="229" width="0.1145%" height="15" fill="rgb(221,76,26)" fg:x="289" fg:w="1"/><text x="33.3542%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="33.1042%" y="213" width="0.1145%" height="15" fill="rgb(225,139,18)" fg:x="289" fg:w="1"/><text x="33.3542%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="33.1042%" y="197" width="0.1145%" height="15" fill="rgb(230,137,11)" fg:x="289" fg:w="1"/><text x="33.3542%" y="207.50"></text></g><g><title>malloc (1 samples, 0.11%)</title><rect x="33.1042%" y="181" width="0.1145%" height="15" fill="rgb(212,28,1)" fg:x="289" fg:w="1"/><text x="33.3542%" y="191.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="33.1042%" y="165" width="0.1145%" height="15" fill="rgb(248,164,17)" fg:x="289" fg:w="1"/><text x="33.3542%" y="175.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (93 samples, 10.65%)</title><rect x="22.6804%" y="453" width="10.6529%" height="15" fill="rgb(222,171,42)" fg:x="198" fg:w="93"/><text x="22.9304%" y="463.50">&lt;atomicdatabase:..</text></g><g><title>atomicdatabase::database::backtracking::split_arguments (4 samples, 0.46%)</title><rect x="32.8751%" y="437" width="0.4582%" height="15" fill="rgb(243,84,45)" fg:x="287" fg:w="4"/><text x="33.1251%" y="447.50"></text></g><g><title>atomicdatabase::database::unification::unify_get_variable_value (4 samples, 0.46%)</title><rect x="32.8751%" y="421" width="0.4582%" height="15" fill="rgb(252,49,23)" fg:x="287" fg:w="4"/><text x="33.1251%" y="431.50"></text></g><g><title>atomicdatabase::database::unification::unify_terms (2 samples, 0.23%)</title><rect x="33.1042%" y="405" width="0.2291%" height="15" fill="rgb(215,19,7)" fg:x="289" fg:w="2"/><text x="33.3542%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="33.2188%" y="389" width="0.1145%" height="15" fill="rgb(238,81,41)" fg:x="290" fg:w="1"/><text x="33.4688%" y="399.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="33.2188%" y="373" width="0.1145%" height="15" fill="rgb(210,199,37)" fg:x="290" fg:w="1"/><text x="33.4688%" y="383.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="33.2188%" y="357" width="0.1145%" height="15" fill="rgb(244,192,49)" fg:x="290" fg:w="1"/><text x="33.4688%" y="367.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.11%)</title><rect x="33.3333%" y="405" width="0.1145%" height="15" fill="rgb(226,211,11)" fg:x="291" fg:w="1"/><text x="33.5833%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="33.3333%" y="389" width="0.1145%" height="15" fill="rgb(236,162,54)" fg:x="291" fg:w="1"/><text x="33.5833%" y="399.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="33.3333%" y="373" width="0.1145%" height="15" fill="rgb(220,229,9)" fg:x="291" fg:w="1"/><text x="33.5833%" y="383.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="33.3333%" y="357" width="0.1145%" height="15" fill="rgb(250,87,22)" fg:x="291" fg:w="1"/><text x="33.5833%" y="367.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (95 samples, 10.88%)</title><rect x="22.6804%" y="501" width="10.8820%" height="15" fill="rgb(239,43,17)" fg:x="198" fg:w="95"/><text x="22.9304%" y="511.50">&lt;atomicdatabase:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 samples, 10.88%)</title><rect x="22.6804%" y="485" width="10.8820%" height="15" fill="rgb(231,177,25)" fg:x="198" fg:w="95"/><text x="22.9304%" y="495.50">&lt;core::iter::ada..</text></g><g><title>&lt;atomicdatabase::database::backtracking::BacktrackingQuery as core::iter::traits::iterator::Iterator&gt;::next (95 samples, 10.88%)</title><rect x="22.6804%" y="469" width="10.8820%" height="15" fill="rgb(219,179,1)" fg:x="198" fg:w="95"/><text x="22.9304%" y="479.50">&lt;atomicdatabase:..</text></g><g><title>core::ptr::drop_in_place&lt;atomicdatabase::database::backtracking::PossibleBindings&gt; (2 samples, 0.23%)</title><rect x="33.3333%" y="453" width="0.2291%" height="15" fill="rgb(238,219,53)" fg:x="291" fg:w="2"/><text x="33.5833%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;atomicdatabase::database::backtracking::BacktrackingQuery,atomicdatabase::database::backtracking::reduce_and_eliminate_wrap::{{closure}}&gt;&gt; (2 samples, 0.23%)</title><rect x="33.3333%" y="437" width="0.2291%" height="15" fill="rgb(232,167,36)" fg:x="291" fg:w="2"/><text x="33.5833%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;atomicdatabase::database::backtracking::BacktrackingQuery&gt; (2 samples, 0.23%)</title><rect x="33.3333%" y="421" width="0.2291%" height="15" fill="rgb(244,19,51)" fg:x="291" fg:w="2"/><text x="33.5833%" y="431.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="33.4479%" y="405" width="0.1145%" height="15" fill="rgb(224,6,22)" fg:x="292" fg:w="1"/><text x="33.6979%" y="415.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="33.4479%" y="389" width="0.1145%" height="15" fill="rgb(224,145,5)" fg:x="292" fg:w="1"/><text x="33.6979%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="33.5624%" y="501" width="0.1145%" height="15" fill="rgb(234,130,49)" fg:x="293" fg:w="1"/><text x="33.8124%" y="511.50"></text></g><g><title>atomicdatabase::database::unification::unify_get_variable_value (1 samples, 0.11%)</title><rect x="33.5624%" y="485" width="0.1145%" height="15" fill="rgb(254,6,2)" fg:x="293" fg:w="1"/><text x="33.8124%" y="495.50"></text></g><g><title>atomicdatabase::database::unification::unify_terms (1 samples, 0.11%)</title><rect x="33.5624%" y="469" width="0.1145%" height="15" fill="rgb(208,96,46)" fg:x="293" fg:w="1"/><text x="33.8124%" y="479.50"></text></g><g><title>atomicdatabase::database::unification::unify_terms (1 samples, 0.11%)</title><rect x="33.5624%" y="453" width="0.1145%" height="15" fill="rgb(239,3,39)" fg:x="293" fg:w="1"/><text x="33.8124%" y="463.50"></text></g><g><title>atomicdatabase::database::unification::unify_variable_literal (1 samples, 0.11%)</title><rect x="33.5624%" y="437" width="0.1145%" height="15" fill="rgb(233,210,1)" fg:x="293" fg:w="1"/><text x="33.8124%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="33.5624%" y="421" width="0.1145%" height="15" fill="rgb(244,137,37)" fg:x="293" fg:w="1"/><text x="33.8124%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="33.5624%" y="405" width="0.1145%" height="15" fill="rgb(240,136,2)" fg:x="293" fg:w="1"/><text x="33.8124%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="33.5624%" y="389" width="0.1145%" height="15" fill="rgb(239,18,37)" fg:x="293" fg:w="1"/><text x="33.8124%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="33.5624%" y="373" width="0.1145%" height="15" fill="rgb(218,185,22)" fg:x="293" fg:w="1"/><text x="33.8124%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="33.5624%" y="357" width="0.1145%" height="15" fill="rgb(225,218,4)" fg:x="293" fg:w="1"/><text x="33.8124%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="33.5624%" y="341" width="0.1145%" height="15" fill="rgb(230,182,32)" fg:x="293" fg:w="1"/><text x="33.8124%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="33.5624%" y="325" width="0.1145%" height="15" fill="rgb(242,56,43)" fg:x="293" fg:w="1"/><text x="33.8124%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="33.5624%" y="309" width="0.1145%" height="15" fill="rgb(233,99,24)" fg:x="293" fg:w="1"/><text x="33.8124%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="33.5624%" y="293" width="0.1145%" height="15" fill="rgb(234,209,42)" fg:x="293" fg:w="1"/><text x="33.8124%" y="303.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (98 samples, 11.23%)</title><rect x="22.6804%" y="565" width="11.2257%" height="15" fill="rgb(227,7,12)" fg:x="198" fg:w="98"/><text x="22.9304%" y="575.50">&lt;atomicdatabase::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (98 samples, 11.23%)</title><rect x="22.6804%" y="549" width="11.2257%" height="15" fill="rgb(245,203,43)" fg:x="198" fg:w="98"/><text x="22.9304%" y="559.50">&lt;core::iter::adap..</text></g><g><title>&lt;atomicdatabase::database::backtracking::BacktrackingQuery as core::iter::traits::iterator::Iterator&gt;::next (98 samples, 11.23%)</title><rect x="22.6804%" y="533" width="11.2257%" height="15" fill="rgb(238,205,33)" fg:x="198" fg:w="98"/><text x="22.9304%" y="543.50">&lt;atomicdatabase::..</text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (98 samples, 11.23%)</title><rect x="22.6804%" y="517" width="11.2257%" height="15" fill="rgb(231,56,7)" fg:x="198" fg:w="98"/><text x="22.9304%" y="527.50">&lt;atomicdatabase::..</text></g><g><title>atomicdatabase::database::backtracking::split_arguments (2 samples, 0.23%)</title><rect x="33.6770%" y="501" width="0.2291%" height="15" fill="rgb(244,186,29)" fg:x="294" fg:w="2"/><text x="33.9270%" y="511.50"></text></g><g><title>atomicdatabase::database::unification::unify_get_variable_value (2 samples, 0.23%)</title><rect x="33.6770%" y="485" width="0.2291%" height="15" fill="rgb(234,111,31)" fg:x="294" fg:w="2"/><text x="33.9270%" y="495.50"></text></g><g><title>atomicdatabase::database::unification::unify_terms (2 samples, 0.23%)</title><rect x="33.6770%" y="469" width="0.2291%" height="15" fill="rgb(241,149,10)" fg:x="294" fg:w="2"/><text x="33.9270%" y="479.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="33.7915%" y="453" width="0.1145%" height="15" fill="rgb(249,206,44)" fg:x="295" fg:w="1"/><text x="34.0415%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="36.5407%" y="389" width="0.1145%" height="15" fill="rgb(251,153,30)" fg:x="319" fg:w="1"/><text x="36.7907%" y="399.50"></text></g><g><title>_ZN89_$LT$atomicdatabase..database..backtracking..Constraint$u20$as$u20$core..clone..Clone$GT$5clone17hd7e8a9388c97e4abE.llvm.618350854987019679 (1 samples, 0.11%)</title><rect x="36.5407%" y="373" width="0.1145%" height="15" fill="rgb(239,152,38)" fg:x="319" fg:w="1"/><text x="36.7907%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="36.5407%" y="357" width="0.1145%" height="15" fill="rgb(249,139,47)" fg:x="319" fg:w="1"/><text x="36.7907%" y="367.50"></text></g><g><title>_ZN4core3ptr68drop_in_place$LT$atomicdatabase..database..unification..ASTValue$GT$17h0cc24a977eca2ee9E.llvm.15422632318813216770 (1 samples, 0.11%)</title><rect x="36.6552%" y="277" width="0.1145%" height="15" fill="rgb(244,64,35)" fg:x="320" fg:w="1"/><text x="36.9052%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.34%)</title><rect x="36.6552%" y="293" width="0.3436%" height="15" fill="rgb(216,46,15)" fg:x="320" fg:w="3"/><text x="36.9052%" y="303.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.23%)</title><rect x="36.7698%" y="277" width="0.2291%" height="15" fill="rgb(250,74,19)" fg:x="321" fg:w="2"/><text x="37.0198%" y="287.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="36.8843%" y="261" width="0.1145%" height="15" fill="rgb(249,42,33)" fg:x="322" fg:w="1"/><text x="37.1343%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="37.1134%" y="261" width="0.1145%" height="15" fill="rgb(242,149,17)" fg:x="324" fg:w="1"/><text x="37.3634%" y="271.50"></text></g><g><title>&lt;atomicdatabase::database::unification::ASTValue as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="37.1134%" y="245" width="0.1145%" height="15" fill="rgb(244,29,21)" fg:x="324" fg:w="1"/><text x="37.3634%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="37.1134%" y="229" width="0.1145%" height="15" fill="rgb(220,130,37)" fg:x="324" fg:w="1"/><text x="37.3634%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="37.1134%" y="213" width="0.1145%" height="15" fill="rgb(211,67,2)" fg:x="324" fg:w="1"/><text x="37.3634%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="37.1134%" y="197" width="0.1145%" height="15" fill="rgb(235,68,52)" fg:x="324" fg:w="1"/><text x="37.3634%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="37.1134%" y="181" width="0.1145%" height="15" fill="rgb(246,142,3)" fg:x="324" fg:w="1"/><text x="37.3634%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="37.1134%" y="165" width="0.1145%" height="15" fill="rgb(241,25,7)" fg:x="324" fg:w="1"/><text x="37.3634%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="37.1134%" y="149" width="0.1145%" height="15" fill="rgb(242,119,39)" fg:x="324" fg:w="1"/><text x="37.3634%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="37.1134%" y="133" width="0.1145%" height="15" fill="rgb(241,98,45)" fg:x="324" fg:w="1"/><text x="37.3634%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="37.1134%" y="117" width="0.1145%" height="15" fill="rgb(254,28,30)" fg:x="324" fg:w="1"/><text x="37.3634%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="37.1134%" y="101" width="0.1145%" height="15" fill="rgb(241,142,54)" fg:x="324" fg:w="1"/><text x="37.3634%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="37.1134%" y="85" width="0.1145%" height="15" fill="rgb(222,85,15)" fg:x="324" fg:w="1"/><text x="37.3634%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="37.1134%" y="69" width="0.1145%" height="15" fill="rgb(210,85,47)" fg:x="324" fg:w="1"/><text x="37.3634%" y="79.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="37.1134%" y="53" width="0.1145%" height="15" fill="rgb(224,206,25)" fg:x="324" fg:w="1"/><text x="37.3634%" y="63.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="37.1134%" y="37" width="0.1145%" height="15" fill="rgb(243,201,19)" fg:x="324" fg:w="1"/><text x="37.3634%" y="47.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.69%)</title><rect x="36.6552%" y="389" width="0.6873%" height="15" fill="rgb(236,59,4)" fg:x="320" fg:w="6"/><text x="36.9052%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.69%)</title><rect x="36.6552%" y="373" width="0.6873%" height="15" fill="rgb(254,179,45)" fg:x="320" fg:w="6"/><text x="36.9052%" y="383.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.69%)</title><rect x="36.6552%" y="357" width="0.6873%" height="15" fill="rgb(226,14,10)" fg:x="320" fg:w="6"/><text x="36.9052%" y="367.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.69%)</title><rect x="36.6552%" y="341" width="0.6873%" height="15" fill="rgb(244,27,41)" fg:x="320" fg:w="6"/><text x="36.9052%" y="351.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::InnerFactPossibilitiesIter as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.69%)</title><rect x="36.6552%" y="325" width="0.6873%" height="15" fill="rgb(235,35,32)" fg:x="320" fg:w="6"/><text x="36.9052%" y="335.50"></text></g><g><title>atomicdatabase::database::unification::lax_unify (6 samples, 0.69%)</title><rect x="36.6552%" y="309" width="0.6873%" height="15" fill="rgb(218,68,31)" fg:x="320" fg:w="6"/><text x="36.9052%" y="319.50"></text></g><g><title>atomicdatabase::database::unification::unify_terms (3 samples, 0.34%)</title><rect x="36.9989%" y="293" width="0.3436%" height="15" fill="rgb(207,120,37)" fg:x="323" fg:w="3"/><text x="37.2489%" y="303.50"></text></g><g><title>atomicdatabase::database::unification::unify_variable_literal (3 samples, 0.34%)</title><rect x="36.9989%" y="277" width="0.3436%" height="15" fill="rgb(227,98,0)" fg:x="323" fg:w="3"/><text x="37.2489%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.11%)</title><rect x="37.2279%" y="261" width="0.1145%" height="15" fill="rgb(207,7,3)" fg:x="325" fg:w="1"/><text x="37.4779%" y="271.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="42.2680%" y="133" width="0.1145%" height="15" fill="rgb(206,98,19)" fg:x="369" fg:w="1"/><text x="42.5180%" y="143.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="42.2680%" y="117" width="0.1145%" height="15" fill="rgb(217,5,26)" fg:x="369" fg:w="1"/><text x="42.5180%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 1.03%)</title><rect x="42.2680%" y="229" width="1.0309%" height="15" fill="rgb(235,190,38)" fg:x="369" fg:w="9"/><text x="42.5180%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 1.03%)</title><rect x="42.2680%" y="213" width="1.0309%" height="15" fill="rgb(247,86,24)" fg:x="369" fg:w="9"/><text x="42.5180%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 1.03%)</title><rect x="42.2680%" y="197" width="1.0309%" height="15" fill="rgb(205,101,16)" fg:x="369" fg:w="9"/><text x="42.5180%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 1.03%)</title><rect x="42.2680%" y="181" width="1.0309%" height="15" fill="rgb(246,168,33)" fg:x="369" fg:w="9"/><text x="42.5180%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 1.03%)</title><rect x="42.2680%" y="165" width="1.0309%" height="15" fill="rgb(231,114,1)" fg:x="369" fg:w="9"/><text x="42.5180%" y="175.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 1.03%)</title><rect x="42.2680%" y="149" width="1.0309%" height="15" fill="rgb(207,184,53)" fg:x="369" fg:w="9"/><text x="42.5180%" y="159.50"></text></g><g><title>malloc (8 samples, 0.92%)</title><rect x="42.3826%" y="133" width="0.9164%" height="15" fill="rgb(224,95,51)" fg:x="370" fg:w="8"/><text x="42.6326%" y="143.50"></text></g><g><title>_ZN72_$LT$atomicdatabase..database..DBValue$u20$as$u20$core..clone..Clone$GT$5clone17heaa4f8ffffde10d3E.llvm.2414314873794538956 (28 samples, 3.21%)</title><rect x="40.7789%" y="325" width="3.2073%" height="15" fill="rgb(212,188,45)" fg:x="356" fg:w="28"/><text x="41.0289%" y="335.50">_ZN..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (15 samples, 1.72%)</title><rect x="42.2680%" y="309" width="1.7182%" height="15" fill="rgb(223,154,38)" fg:x="369" fg:w="15"/><text x="42.5180%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 1.72%)</title><rect x="42.2680%" y="293" width="1.7182%" height="15" fill="rgb(251,22,52)" fg:x="369" fg:w="15"/><text x="42.5180%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 1.72%)</title><rect x="42.2680%" y="277" width="1.7182%" height="15" fill="rgb(229,209,22)" fg:x="369" fg:w="15"/><text x="42.5180%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 1.72%)</title><rect x="42.2680%" y="261" width="1.7182%" height="15" fill="rgb(234,138,34)" fg:x="369" fg:w="15"/><text x="42.5180%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 1.72%)</title><rect x="42.2680%" y="245" width="1.7182%" height="15" fill="rgb(212,95,11)" fg:x="369" fg:w="15"/><text x="42.5180%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (6 samples, 0.69%)</title><rect x="43.2990%" y="229" width="0.6873%" height="15" fill="rgb(240,179,47)" fg:x="378" fg:w="6"/><text x="43.5490%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.69%)</title><rect x="43.2990%" y="213" width="0.6873%" height="15" fill="rgb(240,163,11)" fg:x="378" fg:w="6"/><text x="43.5490%" y="223.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.69%)</title><rect x="43.2990%" y="197" width="0.6873%" height="15" fill="rgb(236,37,12)" fg:x="378" fg:w="6"/><text x="43.5490%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (36 samples, 4.12%)</title><rect x="40.0916%" y="341" width="4.1237%" height="15" fill="rgb(232,164,16)" fg:x="350" fg:w="36"/><text x="40.3416%" y="351.50">&lt;all..</text></g><g><title>malloc (2 samples, 0.23%)</title><rect x="43.9863%" y="325" width="0.2291%" height="15" fill="rgb(244,205,15)" fg:x="384" fg:w="2"/><text x="44.2363%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="45.3608%" y="325" width="0.1145%" height="15" fill="rgb(223,117,47)" fg:x="396" fg:w="1"/><text x="45.6108%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="45.3608%" y="309" width="0.1145%" height="15" fill="rgb(244,107,35)" fg:x="396" fg:w="1"/><text x="45.6108%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="45.3608%" y="293" width="0.1145%" height="15" fill="rgb(205,140,8)" fg:x="396" fg:w="1"/><text x="45.6108%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="45.3608%" y="277" width="0.1145%" height="15" fill="rgb(228,84,46)" fg:x="396" fg:w="1"/><text x="45.6108%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="45.3608%" y="261" width="0.1145%" height="15" fill="rgb(254,188,9)" fg:x="396" fg:w="1"/><text x="45.6108%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="45.3608%" y="245" width="0.1145%" height="15" fill="rgb(206,112,54)" fg:x="396" fg:w="1"/><text x="45.6108%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="45.3608%" y="229" width="0.1145%" height="15" fill="rgb(216,84,49)" fg:x="396" fg:w="1"/><text x="45.6108%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="45.3608%" y="213" width="0.1145%" height="15" fill="rgb(214,194,35)" fg:x="396" fg:w="1"/><text x="45.6108%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="45.3608%" y="197" width="0.1145%" height="15" fill="rgb(249,28,3)" fg:x="396" fg:w="1"/><text x="45.6108%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="45.3608%" y="181" width="0.1145%" height="15" fill="rgb(222,56,52)" fg:x="396" fg:w="1"/><text x="45.6108%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="45.3608%" y="165" width="0.1145%" height="15" fill="rgb(245,217,50)" fg:x="396" fg:w="1"/><text x="45.6108%" y="175.50"></text></g><g><title>malloc (1 samples, 0.11%)</title><rect x="45.3608%" y="149" width="0.1145%" height="15" fill="rgb(213,201,24)" fg:x="396" fg:w="1"/><text x="45.6108%" y="159.50"></text></g><g><title>__rust_alloc (1 samples, 0.11%)</title><rect x="46.0481%" y="133" width="0.1145%" height="15" fill="rgb(248,116,28)" fg:x="402" fg:w="1"/><text x="46.2981%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.57%)</title><rect x="45.9336%" y="229" width="0.5727%" height="15" fill="rgb(219,72,43)" fg:x="401" fg:w="5"/><text x="46.1836%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.57%)</title><rect x="45.9336%" y="213" width="0.5727%" height="15" fill="rgb(209,138,14)" fg:x="401" fg:w="5"/><text x="46.1836%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.57%)</title><rect x="45.9336%" y="197" width="0.5727%" height="15" fill="rgb(222,18,33)" fg:x="401" fg:w="5"/><text x="46.1836%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.46%)</title><rect x="46.0481%" y="181" width="0.4582%" height="15" fill="rgb(213,199,7)" fg:x="402" fg:w="4"/><text x="46.2981%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.46%)</title><rect x="46.0481%" y="165" width="0.4582%" height="15" fill="rgb(250,110,10)" fg:x="402" fg:w="4"/><text x="46.2981%" y="175.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.46%)</title><rect x="46.0481%" y="149" width="0.4582%" height="15" fill="rgb(248,123,6)" fg:x="402" fg:w="4"/><text x="46.2981%" y="159.50"></text></g><g><title>malloc (3 samples, 0.34%)</title><rect x="46.1627%" y="133" width="0.3436%" height="15" fill="rgb(206,91,31)" fg:x="403" fg:w="3"/><text x="46.4127%" y="143.50"></text></g><g><title>&lt;atomicdatabase::database::unification::ASTValue as core::clone::Clone&gt;::clone (10 samples, 1.15%)</title><rect x="45.4754%" y="325" width="1.1455%" height="15" fill="rgb(211,154,13)" fg:x="397" fg:w="10"/><text x="45.7254%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.80%)</title><rect x="45.8190%" y="309" width="0.8018%" height="15" fill="rgb(225,148,7)" fg:x="400" fg:w="7"/><text x="46.0690%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.69%)</title><rect x="45.9336%" y="293" width="0.6873%" height="15" fill="rgb(220,160,43)" fg:x="401" fg:w="6"/><text x="46.1836%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.69%)</title><rect x="45.9336%" y="277" width="0.6873%" height="15" fill="rgb(213,52,39)" fg:x="401" fg:w="6"/><text x="46.1836%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.69%)</title><rect x="45.9336%" y="261" width="0.6873%" height="15" fill="rgb(243,137,7)" fg:x="401" fg:w="6"/><text x="46.1836%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.69%)</title><rect x="45.9336%" y="245" width="0.6873%" height="15" fill="rgb(230,79,13)" fg:x="401" fg:w="6"/><text x="46.1836%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.11%)</title><rect x="46.5063%" y="229" width="0.1145%" height="15" fill="rgb(247,105,23)" fg:x="406" fg:w="1"/><text x="46.7563%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="46.5063%" y="213" width="0.1145%" height="15" fill="rgb(223,179,41)" fg:x="406" fg:w="1"/><text x="46.7563%" y="223.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="46.5063%" y="197" width="0.1145%" height="15" fill="rgb(218,9,34)" fg:x="406" fg:w="1"/><text x="46.7563%" y="207.50"></text></g><g><title>__rust_alloc (1 samples, 0.11%)</title><rect x="46.6208%" y="325" width="0.1145%" height="15" fill="rgb(222,106,8)" fg:x="407" fg:w="1"/><text x="46.8708%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (24 samples, 2.75%)</title><rect x="44.2153%" y="341" width="2.7491%" height="15" fill="rgb(211,220,0)" fg:x="386" fg:w="24"/><text x="44.4653%" y="351.50">&lt;h..</text></g><g><title>malloc (2 samples, 0.23%)</title><rect x="46.7354%" y="325" width="0.2291%" height="15" fill="rgb(229,52,16)" fg:x="408" fg:w="2"/><text x="46.9854%" y="335.50"></text></g><g><title>_ZN4core3ptr54drop_in_place$LT$atomicdatabase..database..DBValue$GT$17h85b73c21a594f16aE.llvm.618350854987019679 (5 samples, 0.57%)</title><rect x="47.0790%" y="325" width="0.5727%" height="15" fill="rgb(212,155,18)" fg:x="411" fg:w="5"/><text x="47.3290%" y="335.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.11%)</title><rect x="47.6518%" y="325" width="0.1145%" height="15" fill="rgb(242,21,14)" fg:x="416" fg:w="1"/><text x="47.9018%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.11%)</title><rect x="47.6518%" y="309" width="0.1145%" height="15" fill="rgb(222,19,48)" fg:x="416" fg:w="1"/><text x="47.9018%" y="319.50"></text></g><g><title>__rust_dealloc (1 samples, 0.11%)</title><rect x="47.7663%" y="325" width="0.1145%" height="15" fill="rgb(232,45,27)" fg:x="417" fg:w="1"/><text x="48.0163%" y="335.50"></text></g><g><title>_ZN4core3ptr78drop_in_place$LT$$u5b$atomicdatabase..database..unification..ASTValue$u5d$$GT$17hff25821d9680c57fE.llvm.618350854987019679 (16 samples, 1.83%)</title><rect x="46.9645%" y="341" width="1.8328%" height="15" fill="rgb(249,103,42)" fg:x="410" fg:w="16"/><text x="47.2145%" y="351.50">_..</text></g><g><title>cfree@GLIBC_2.2.5 (8 samples, 0.92%)</title><rect x="47.8809%" y="325" width="0.9164%" height="15" fill="rgb(246,81,33)" fg:x="418" fg:w="8"/><text x="48.1309%" y="335.50"></text></g><g><title>_int_free (7 samples, 0.80%)</title><rect x="47.9954%" y="309" width="0.8018%" height="15" fill="rgb(252,33,42)" fg:x="419" fg:w="7"/><text x="48.2454%" y="319.50"></text></g><g><title>__rdl_alloc (2 samples, 0.23%)</title><rect x="48.7973%" y="341" width="0.2291%" height="15" fill="rgb(209,212,41)" fg:x="426" fg:w="2"/><text x="49.0473%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.23%)</title><rect x="48.7973%" y="325" width="0.2291%" height="15" fill="rgb(207,154,6)" fg:x="426" fg:w="2"/><text x="49.0473%" y="335.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6 samples, 0.69%)</title><rect x="49.9427%" y="325" width="0.6873%" height="15" fill="rgb(223,64,47)" fg:x="436" fg:w="6"/><text x="50.1927%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.23%)</title><rect x="50.4009%" y="309" width="0.2291%" height="15" fill="rgb(211,161,38)" fg:x="440" fg:w="2"/><text x="50.6509%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.11%)</title><rect x="50.5155%" y="293" width="0.1145%" height="15" fill="rgb(219,138,40)" fg:x="441" fg:w="1"/><text x="50.7655%" y="303.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="52.0046%" y="133" width="0.1145%" height="15" fill="rgb(241,228,46)" fg:x="454" fg:w="1"/><text x="52.2546%" y="143.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="52.0046%" y="117" width="0.1145%" height="15" fill="rgb(223,209,38)" fg:x="454" fg:w="1"/><text x="52.2546%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (12 samples, 1.37%)</title><rect x="51.8900%" y="309" width="1.3746%" height="15" fill="rgb(236,164,45)" fg:x="453" fg:w="12"/><text x="52.1400%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 1.26%)</title><rect x="52.0046%" y="293" width="1.2600%" height="15" fill="rgb(231,15,5)" fg:x="454" fg:w="11"/><text x="52.2546%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 1.26%)</title><rect x="52.0046%" y="277" width="1.2600%" height="15" fill="rgb(252,35,15)" fg:x="454" fg:w="11"/><text x="52.2546%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 1.26%)</title><rect x="52.0046%" y="261" width="1.2600%" height="15" fill="rgb(248,181,18)" fg:x="454" fg:w="11"/><text x="52.2546%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 1.26%)</title><rect x="52.0046%" y="245" width="1.2600%" height="15" fill="rgb(233,39,42)" fg:x="454" fg:w="11"/><text x="52.2546%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 1.26%)</title><rect x="52.0046%" y="229" width="1.2600%" height="15" fill="rgb(238,110,33)" fg:x="454" fg:w="11"/><text x="52.2546%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 1.26%)</title><rect x="52.0046%" y="213" width="1.2600%" height="15" fill="rgb(233,195,10)" fg:x="454" fg:w="11"/><text x="52.2546%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 1.26%)</title><rect x="52.0046%" y="197" width="1.2600%" height="15" fill="rgb(254,105,3)" fg:x="454" fg:w="11"/><text x="52.2546%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 1.26%)</title><rect x="52.0046%" y="181" width="1.2600%" height="15" fill="rgb(221,225,9)" fg:x="454" fg:w="11"/><text x="52.2546%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 1.26%)</title><rect x="52.0046%" y="165" width="1.2600%" height="15" fill="rgb(224,227,45)" fg:x="454" fg:w="11"/><text x="52.2546%" y="175.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 1.26%)</title><rect x="52.0046%" y="149" width="1.2600%" height="15" fill="rgb(229,198,43)" fg:x="454" fg:w="11"/><text x="52.2546%" y="159.50"></text></g><g><title>malloc (10 samples, 1.15%)</title><rect x="52.1191%" y="133" width="1.1455%" height="15" fill="rgb(206,209,35)" fg:x="455" fg:w="10"/><text x="52.3691%" y="143.50"></text></g><g><title>_int_malloc (5 samples, 0.57%)</title><rect x="52.6919%" y="117" width="0.5727%" height="15" fill="rgb(245,195,53)" fg:x="460" fg:w="5"/><text x="52.9419%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="54.2955%" y="213" width="0.1145%" height="15" fill="rgb(240,92,26)" fg:x="474" fg:w="1"/><text x="54.5455%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="54.2955%" y="197" width="0.1145%" height="15" fill="rgb(207,40,23)" fg:x="474" fg:w="1"/><text x="54.5455%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="54.2955%" y="181" width="0.1145%" height="15" fill="rgb(223,111,35)" fg:x="474" fg:w="1"/><text x="54.5455%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="54.2955%" y="165" width="0.1145%" height="15" fill="rgb(229,147,28)" fg:x="474" fg:w="1"/><text x="54.5455%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="54.2955%" y="149" width="0.1145%" height="15" fill="rgb(211,29,28)" fg:x="474" fg:w="1"/><text x="54.5455%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="54.2955%" y="133" width="0.1145%" height="15" fill="rgb(228,72,33)" fg:x="474" fg:w="1"/><text x="54.5455%" y="143.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="54.2955%" y="117" width="0.1145%" height="15" fill="rgb(205,214,31)" fg:x="474" fg:w="1"/><text x="54.5455%" y="127.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="54.2955%" y="101" width="0.1145%" height="15" fill="rgb(224,111,15)" fg:x="474" fg:w="1"/><text x="54.5455%" y="111.50"></text></g><g><title>&lt;atomicdatabase::database::unification::ASTValue as core::clone::Clone&gt;::clone (12 samples, 1.37%)</title><rect x="53.2646%" y="309" width="1.3746%" height="15" fill="rgb(253,21,26)" fg:x="465" fg:w="12"/><text x="53.5146%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.57%)</title><rect x="54.0664%" y="293" width="0.5727%" height="15" fill="rgb(245,139,43)" fg:x="472" fg:w="5"/><text x="54.3164%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.34%)</title><rect x="54.2955%" y="277" width="0.3436%" height="15" fill="rgb(252,170,7)" fg:x="474" fg:w="3"/><text x="54.5455%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.34%)</title><rect x="54.2955%" y="261" width="0.3436%" height="15" fill="rgb(231,118,14)" fg:x="474" fg:w="3"/><text x="54.5455%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.34%)</title><rect x="54.2955%" y="245" width="0.3436%" height="15" fill="rgb(238,83,0)" fg:x="474" fg:w="3"/><text x="54.5455%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.34%)</title><rect x="54.2955%" y="229" width="0.3436%" height="15" fill="rgb(221,39,39)" fg:x="474" fg:w="3"/><text x="54.5455%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.23%)</title><rect x="54.4101%" y="213" width="0.2291%" height="15" fill="rgb(222,119,46)" fg:x="475" fg:w="2"/><text x="54.6601%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.23%)</title><rect x="54.4101%" y="197" width="0.2291%" height="15" fill="rgb(222,165,49)" fg:x="475" fg:w="2"/><text x="54.6601%" y="207.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.23%)</title><rect x="54.4101%" y="181" width="0.2291%" height="15" fill="rgb(219,113,52)" fg:x="475" fg:w="2"/><text x="54.6601%" y="191.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="54.6392%" y="309" width="0.1145%" height="15" fill="rgb(214,7,15)" fg:x="477" fg:w="1"/><text x="54.8892%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="54.7537%" y="309" width="0.1145%" height="15" fill="rgb(235,32,4)" fg:x="478" fg:w="1"/><text x="55.0037%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="54.7537%" y="293" width="0.1145%" height="15" fill="rgb(238,90,54)" fg:x="478" fg:w="1"/><text x="55.0037%" y="303.50"></text></g><g><title>__rust_alloc (1 samples, 0.11%)</title><rect x="54.8683%" y="309" width="0.1145%" height="15" fill="rgb(213,208,19)" fg:x="479" fg:w="1"/><text x="55.1183%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (41 samples, 4.70%)</title><rect x="50.6300%" y="325" width="4.6964%" height="15" fill="rgb(233,156,4)" fg:x="442" fg:w="41"/><text x="50.8800%" y="335.50">&lt;hash..</text></g><g><title>malloc (3 samples, 0.34%)</title><rect x="54.9828%" y="309" width="0.3436%" height="15" fill="rgb(207,194,5)" fg:x="480" fg:w="3"/><text x="55.2328%" y="319.50"></text></g><g><title>[atomicdatabase] (1 samples, 0.11%)</title><rect x="56.0137%" y="309" width="0.1145%" height="15" fill="rgb(206,111,30)" fg:x="489" fg:w="1"/><text x="56.2637%" y="319.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="56.0137%" y="293" width="0.1145%" height="15" fill="rgb(243,70,54)" fg:x="489" fg:w="1"/><text x="56.2637%" y="303.50"></text></g><g><title>_ZN4core3ptr68drop_in_place$LT$atomicdatabase..database..unification..ASTValue$GT$17h0cc24a977eca2ee9E.llvm.15422632318813216770 (3 samples, 0.34%)</title><rect x="56.1283%" y="309" width="0.3436%" height="15" fill="rgb(242,28,8)" fg:x="490" fg:w="3"/><text x="56.3783%" y="319.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.11%)</title><rect x="56.4719%" y="309" width="0.1145%" height="15" fill="rgb(219,106,18)" fg:x="493" fg:w="1"/><text x="56.7219%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.11%)</title><rect x="56.4719%" y="293" width="0.1145%" height="15" fill="rgb(244,222,10)" fg:x="493" fg:w="1"/><text x="56.7219%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 3.44%)</title><rect x="55.3265%" y="325" width="3.4364%" height="15" fill="rgb(236,179,52)" fg:x="483" fg:w="30"/><text x="55.5765%" y="335.50">&lt;ha..</text></g><g><title>cfree@GLIBC_2.2.5 (19 samples, 2.18%)</title><rect x="56.5865%" y="309" width="2.1764%" height="15" fill="rgb(213,23,39)" fg:x="494" fg:w="19"/><text x="56.8365%" y="319.50">c..</text></g><g><title>_int_free (12 samples, 1.37%)</title><rect x="57.3883%" y="293" width="1.3746%" height="15" fill="rgb(238,48,10)" fg:x="501" fg:w="12"/><text x="57.6383%" y="303.50"></text></g><g><title>__rust_dealloc (1 samples, 0.11%)</title><rect x="58.9920%" y="293" width="0.1145%" height="15" fill="rgb(251,196,23)" fg:x="515" fg:w="1"/><text x="59.2420%" y="303.50"></text></g><g><title>alloc::str::convert_while_ascii (1 samples, 0.11%)</title><rect x="59.1065%" y="277" width="0.1145%" height="15" fill="rgb(250,152,24)" fg:x="516" fg:w="1"/><text x="59.3565%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="59.1065%" y="261" width="0.1145%" height="15" fill="rgb(209,150,17)" fg:x="516" fg:w="1"/><text x="59.3565%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="59.1065%" y="245" width="0.1145%" height="15" fill="rgb(234,202,34)" fg:x="516" fg:w="1"/><text x="59.3565%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="59.1065%" y="229" width="0.1145%" height="15" fill="rgb(253,148,53)" fg:x="516" fg:w="1"/><text x="59.3565%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="59.1065%" y="213" width="0.1145%" height="15" fill="rgb(218,129,16)" fg:x="516" fg:w="1"/><text x="59.3565%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="59.1065%" y="197" width="0.1145%" height="15" fill="rgb(216,85,19)" fg:x="516" fg:w="1"/><text x="59.3565%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="59.1065%" y="181" width="0.1145%" height="15" fill="rgb(235,228,7)" fg:x="516" fg:w="1"/><text x="59.3565%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="59.1065%" y="165" width="0.1145%" height="15" fill="rgb(245,175,0)" fg:x="516" fg:w="1"/><text x="59.3565%" y="175.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="59.1065%" y="149" width="0.1145%" height="15" fill="rgb(208,168,36)" fg:x="516" fg:w="1"/><text x="59.3565%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="59.1065%" y="133" width="0.1145%" height="15" fill="rgb(246,171,24)" fg:x="516" fg:w="1"/><text x="59.3565%" y="143.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.11%)</title><rect x="59.2211%" y="277" width="0.1145%" height="15" fill="rgb(215,142,24)" fg:x="517" fg:w="1"/><text x="59.4711%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.11%)</title><rect x="59.2211%" y="261" width="0.1145%" height="15" fill="rgb(250,187,7)" fg:x="517" fg:w="1"/><text x="59.4711%" y="271.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.46%)</title><rect x="59.1065%" y="293" width="0.4582%" height="15" fill="rgb(228,66,33)" fg:x="516" fg:w="4"/><text x="59.3565%" y="303.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.23%)</title><rect x="59.3356%" y="277" width="0.2291%" height="15" fill="rgb(234,215,21)" fg:x="518" fg:w="2"/><text x="59.5856%" y="287.50"></text></g><g><title>&lt;atomicdatabase::database::DBValue as core::cmp::PartialEq&gt;::eq (8 samples, 0.92%)</title><rect x="58.8774%" y="309" width="0.9164%" height="15" fill="rgb(222,191,20)" fg:x="514" fg:w="8"/><text x="59.1274%" y="319.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.23%)</title><rect x="59.5647%" y="293" width="0.2291%" height="15" fill="rgb(245,79,54)" fg:x="520" fg:w="2"/><text x="59.8147%" y="303.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="59.6793%" y="277" width="0.1145%" height="15" fill="rgb(240,10,37)" fg:x="521" fg:w="1"/><text x="59.9293%" y="287.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="62.1993%" y="101" width="0.1145%" height="15" fill="rgb(214,192,32)" fg:x="543" fg:w="1"/><text x="62.4493%" y="111.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="62.1993%" y="85" width="0.1145%" height="15" fill="rgb(209,36,54)" fg:x="543" fg:w="1"/><text x="62.4493%" y="95.50"></text></g><g><title>__rust_alloc (3 samples, 0.34%)</title><rect x="62.3139%" y="101" width="0.3436%" height="15" fill="rgb(220,10,11)" fg:x="544" fg:w="3"/><text x="62.5639%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 1.26%)</title><rect x="62.1993%" y="197" width="1.2600%" height="15" fill="rgb(221,106,17)" fg:x="543" fg:w="11"/><text x="62.4493%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 1.26%)</title><rect x="62.1993%" y="181" width="1.2600%" height="15" fill="rgb(251,142,44)" fg:x="543" fg:w="11"/><text x="62.4493%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 1.26%)</title><rect x="62.1993%" y="165" width="1.2600%" height="15" fill="rgb(238,13,15)" fg:x="543" fg:w="11"/><text x="62.4493%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 1.26%)</title><rect x="62.1993%" y="149" width="1.2600%" height="15" fill="rgb(208,107,27)" fg:x="543" fg:w="11"/><text x="62.4493%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 1.26%)</title><rect x="62.1993%" y="133" width="1.2600%" height="15" fill="rgb(205,136,37)" fg:x="543" fg:w="11"/><text x="62.4493%" y="143.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 1.26%)</title><rect x="62.1993%" y="117" width="1.2600%" height="15" fill="rgb(250,205,27)" fg:x="543" fg:w="11"/><text x="62.4493%" y="127.50"></text></g><g><title>malloc (7 samples, 0.80%)</title><rect x="62.6575%" y="101" width="0.8018%" height="15" fill="rgb(210,80,43)" fg:x="547" fg:w="7"/><text x="62.9075%" y="111.50"></text></g><g><title>_int_malloc (5 samples, 0.57%)</title><rect x="62.8866%" y="85" width="0.5727%" height="15" fill="rgb(247,160,36)" fg:x="549" fg:w="5"/><text x="63.1366%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (13 samples, 1.49%)</title><rect x="62.1993%" y="277" width="1.4891%" height="15" fill="rgb(234,13,49)" fg:x="543" fg:w="13"/><text x="62.4493%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 1.49%)</title><rect x="62.1993%" y="261" width="1.4891%" height="15" fill="rgb(234,122,0)" fg:x="543" fg:w="13"/><text x="62.4493%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 1.49%)</title><rect x="62.1993%" y="245" width="1.4891%" height="15" fill="rgb(207,146,38)" fg:x="543" fg:w="13"/><text x="62.4493%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 1.49%)</title><rect x="62.1993%" y="229" width="1.4891%" height="15" fill="rgb(207,177,25)" fg:x="543" fg:w="13"/><text x="62.4493%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 1.49%)</title><rect x="62.1993%" y="213" width="1.4891%" height="15" fill="rgb(211,178,42)" fg:x="543" fg:w="13"/><text x="62.4493%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.23%)</title><rect x="63.4593%" y="197" width="0.2291%" height="15" fill="rgb(230,69,54)" fg:x="554" fg:w="2"/><text x="63.7093%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.23%)</title><rect x="63.4593%" y="181" width="0.2291%" height="15" fill="rgb(214,135,41)" fg:x="554" fg:w="2"/><text x="63.7093%" y="191.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.23%)</title><rect x="63.4593%" y="165" width="0.2291%" height="15" fill="rgb(237,67,25)" fg:x="554" fg:w="2"/><text x="63.7093%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.46%)</title><rect x="64.0321%" y="181" width="0.4582%" height="15" fill="rgb(222,189,50)" fg:x="559" fg:w="4"/><text x="64.2821%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.46%)</title><rect x="64.0321%" y="165" width="0.4582%" height="15" fill="rgb(245,148,34)" fg:x="559" fg:w="4"/><text x="64.2821%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.46%)</title><rect x="64.0321%" y="149" width="0.4582%" height="15" fill="rgb(222,29,6)" fg:x="559" fg:w="4"/><text x="64.2821%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.46%)</title><rect x="64.0321%" y="133" width="0.4582%" height="15" fill="rgb(221,189,43)" fg:x="559" fg:w="4"/><text x="64.2821%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.46%)</title><rect x="64.0321%" y="117" width="0.4582%" height="15" fill="rgb(207,36,27)" fg:x="559" fg:w="4"/><text x="64.2821%" y="127.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.46%)</title><rect x="64.0321%" y="101" width="0.4582%" height="15" fill="rgb(217,90,24)" fg:x="559" fg:w="4"/><text x="64.2821%" y="111.50"></text></g><g><title>malloc (4 samples, 0.46%)</title><rect x="64.0321%" y="85" width="0.4582%" height="15" fill="rgb(224,66,35)" fg:x="559" fg:w="4"/><text x="64.2821%" y="95.50"></text></g><g><title>&lt;atomicdatabase::database::unification::ASTValue as core::clone::Clone&gt;::clone (9 samples, 1.03%)</title><rect x="63.6884%" y="277" width="1.0309%" height="15" fill="rgb(221,13,50)" fg:x="556" fg:w="9"/><text x="63.9384%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.80%)</title><rect x="63.9175%" y="261" width="0.8018%" height="15" fill="rgb(236,68,49)" fg:x="558" fg:w="7"/><text x="64.1675%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.69%)</title><rect x="64.0321%" y="245" width="0.6873%" height="15" fill="rgb(229,146,28)" fg:x="559" fg:w="6"/><text x="64.2821%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.69%)</title><rect x="64.0321%" y="229" width="0.6873%" height="15" fill="rgb(225,31,38)" fg:x="559" fg:w="6"/><text x="64.2821%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.69%)</title><rect x="64.0321%" y="213" width="0.6873%" height="15" fill="rgb(250,208,3)" fg:x="559" fg:w="6"/><text x="64.2821%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.69%)</title><rect x="64.0321%" y="197" width="0.6873%" height="15" fill="rgb(246,54,23)" fg:x="559" fg:w="6"/><text x="64.2821%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.23%)</title><rect x="64.4903%" y="181" width="0.2291%" height="15" fill="rgb(243,76,11)" fg:x="563" fg:w="2"/><text x="64.7403%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.23%)</title><rect x="64.4903%" y="165" width="0.2291%" height="15" fill="rgb(245,21,50)" fg:x="563" fg:w="2"/><text x="64.7403%" y="175.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.23%)</title><rect x="64.4903%" y="149" width="0.2291%" height="15" fill="rgb(228,9,43)" fg:x="563" fg:w="2"/><text x="64.7403%" y="159.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (35 samples, 4.01%)</title><rect x="60.9393%" y="293" width="4.0092%" height="15" fill="rgb(208,100,47)" fg:x="532" fg:w="35"/><text x="61.1893%" y="303.50">&lt;has..</text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.23%)</title><rect x="64.7194%" y="277" width="0.2291%" height="15" fill="rgb(232,26,8)" fg:x="565" fg:w="2"/><text x="64.9694%" y="287.50"></text></g><g><title>[atomicdatabase] (1 samples, 0.11%)</title><rect x="65.1775%" y="277" width="0.1145%" height="15" fill="rgb(216,166,38)" fg:x="569" fg:w="1"/><text x="65.4275%" y="287.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="65.1775%" y="261" width="0.1145%" height="15" fill="rgb(251,202,51)" fg:x="569" fg:w="1"/><text x="65.4275%" y="271.50"></text></g><g><title>_ZN4core3ptr68drop_in_place$LT$atomicdatabase..database..unification..ASTValue$GT$17h0cc24a977eca2ee9E.llvm.15422632318813216770 (1 samples, 0.11%)</title><rect x="65.2921%" y="277" width="0.1145%" height="15" fill="rgb(254,216,34)" fg:x="570" fg:w="1"/><text x="65.5421%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.60%)</title><rect x="64.9485%" y="293" width="1.6037%" height="15" fill="rgb(251,32,27)" fg:x="567" fg:w="14"/><text x="65.1985%" y="303.50"></text></g><g><title>cfree@GLIBC_2.2.5 (10 samples, 1.15%)</title><rect x="65.4066%" y="277" width="1.1455%" height="15" fill="rgb(208,127,28)" fg:x="571" fg:w="10"/><text x="65.6566%" y="287.50"></text></g><g><title>_int_free (8 samples, 0.92%)</title><rect x="65.6357%" y="261" width="0.9164%" height="15" fill="rgb(224,137,22)" fg:x="573" fg:w="8"/><text x="65.8857%" y="271.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.11%)</title><rect x="67.1249%" y="245" width="0.1145%" height="15" fill="rgb(254,70,32)" fg:x="586" fg:w="1"/><text x="67.3749%" y="255.50"></text></g><g><title>__rust_alloc (1 samples, 0.11%)</title><rect x="67.2394%" y="245" width="0.1145%" height="15" fill="rgb(229,75,37)" fg:x="587" fg:w="1"/><text x="67.4894%" y="255.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17hc74b6d940613d662E.llvm.15422632318813216770 (7 samples, 0.80%)</title><rect x="66.6667%" y="261" width="0.8018%" height="15" fill="rgb(252,64,23)" fg:x="582" fg:w="7"/><text x="66.9167%" y="271.50"></text></g><g><title>malloc (1 samples, 0.11%)</title><rect x="67.3540%" y="245" width="0.1145%" height="15" fill="rgb(232,162,48)" fg:x="588" fg:w="1"/><text x="67.6040%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V&gt; as core::convert::From&lt;[(K,V): N]&gt;&gt;::from (10 samples, 1.15%)</title><rect x="66.5521%" y="293" width="1.1455%" height="15" fill="rgb(246,160,12)" fg:x="581" fg:w="10"/><text x="66.8021%" y="303.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (10 samples, 1.15%)</title><rect x="66.5521%" y="277" width="1.1455%" height="15" fill="rgb(247,166,0)" fg:x="581" fg:w="10"/><text x="66.8021%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.23%)</title><rect x="67.4685%" y="261" width="0.2291%" height="15" fill="rgb(249,219,21)" fg:x="589" fg:w="2"/><text x="67.7185%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.11%)</title><rect x="67.5830%" y="245" width="0.1145%" height="15" fill="rgb(205,209,3)" fg:x="590" fg:w="1"/><text x="67.8330%" y="255.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.11%)</title><rect x="67.6976%" y="293" width="0.1145%" height="15" fill="rgb(243,44,1)" fg:x="591" fg:w="1"/><text x="67.9476%" y="303.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.11%)</title><rect x="67.8121%" y="293" width="0.1145%" height="15" fill="rgb(206,159,16)" fg:x="592" fg:w="1"/><text x="68.0621%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.11%)</title><rect x="67.8121%" y="277" width="0.1145%" height="15" fill="rgb(244,77,30)" fg:x="592" fg:w="1"/><text x="68.0621%" y="287.50"></text></g><g><title>atomicdatabase::database::unification::unify_terms (2 samples, 0.23%)</title><rect x="67.9267%" y="293" width="0.2291%" height="15" fill="rgb(218,69,12)" fg:x="593" fg:w="2"/><text x="68.1767%" y="303.50"></text></g><g><title>&lt;atomicdatabase::database::DBValue as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="68.0412%" y="277" width="0.1145%" height="15" fill="rgb(212,87,7)" fg:x="594" fg:w="1"/><text x="68.2912%" y="287.50"></text></g><g><title>cfree@GLIBC_2.2.5 (10 samples, 1.15%)</title><rect x="68.1558%" y="293" width="1.1455%" height="15" fill="rgb(245,114,25)" fg:x="595" fg:w="10"/><text x="68.4058%" y="303.50"></text></g><g><title>_int_free (7 samples, 0.80%)</title><rect x="68.4994%" y="277" width="0.8018%" height="15" fill="rgb(210,61,42)" fg:x="598" fg:w="7"/><text x="68.7494%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (24 samples, 2.75%)</title><rect x="69.3013%" y="293" width="2.7491%" height="15" fill="rgb(211,52,33)" fg:x="605" fg:w="24"/><text x="69.5513%" y="303.50">co..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 1.37%)</title><rect x="70.6758%" y="277" width="1.3746%" height="15" fill="rgb(234,58,33)" fg:x="617" fg:w="12"/><text x="70.9258%" y="287.50"></text></g><g><title>atomicdatabase::database::unification::unify_terms (120 samples, 13.75%)</title><rect x="58.7629%" y="325" width="13.7457%" height="15" fill="rgb(220,115,36)" fg:x="513" fg:w="120"/><text x="59.0129%" y="335.50">atomicdatabase::datab..</text></g><g><title>atomicdatabase::database::unification::unify_variable_literal (111 samples, 12.71%)</title><rect x="59.7938%" y="309" width="12.7148%" height="15" fill="rgb(243,153,54)" fg:x="522" fg:w="111"/><text x="60.0438%" y="319.50">atomicdatabase::dat..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (4 samples, 0.46%)</title><rect x="72.0504%" y="293" width="0.4582%" height="15" fill="rgb(251,47,18)" fg:x="629" fg:w="4"/><text x="72.3004%" y="303.50"></text></g><g><title>atomicdatabase::database::unification::lax_unify (209 samples, 23.94%)</title><rect x="49.0263%" y="341" width="23.9404%" height="15" fill="rgb(242,102,42)" fg:x="428" fg:w="209"/><text x="49.2763%" y="351.50">atomicdatabase::database::unification:..</text></g><g><title>cfree@GLIBC_2.2.5 (4 samples, 0.46%)</title><rect x="72.5086%" y="325" width="0.4582%" height="15" fill="rgb(234,31,38)" fg:x="633" fg:w="4"/><text x="72.7586%" y="335.50"></text></g><g><title>_int_free (3 samples, 0.34%)</title><rect x="72.6231%" y="309" width="0.3436%" height="15" fill="rgb(221,117,51)" fg:x="634" fg:w="3"/><text x="72.8731%" y="319.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="72.9668%" y="341" width="0.1145%" height="15" fill="rgb(212,20,18)" fg:x="637" fg:w="1"/><text x="73.2168%" y="351.50"></text></g><g><title>_ZN7dashmap24DashMap$LT$K$C$V$C$S$GT$10hash_usize17h3aec2b0458dda4b9E.llvm.14781992193672218318 (10 samples, 1.15%)</title><rect x="73.9977%" y="325" width="1.1455%" height="15" fill="rgb(245,133,36)" fg:x="646" fg:w="10"/><text x="74.2477%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.23%)</title><rect x="74.9141%" y="309" width="0.2291%" height="15" fill="rgb(212,6,19)" fg:x="654" fg:w="2"/><text x="75.1641%" y="319.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.11%)</title><rect x="75.1432%" y="325" width="0.1145%" height="15" fill="rgb(218,1,36)" fg:x="656" fg:w="1"/><text x="75.3932%" y="335.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::InnerFactPossibilitiesIter as core::iter::traits::iterator::Iterator&gt;::next (317 samples, 36.31%)</title><rect x="39.0607%" y="357" width="36.3116%" height="15" fill="rgb(246,84,54)" fg:x="341" fg:w="317"/><text x="39.3107%" y="367.50">&lt;atomicdatabase::database::backtracking::InnerFactPossibili..</text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (20 samples, 2.29%)</title><rect x="73.0813%" y="341" width="2.2910%" height="15" fill="rgb(242,110,6)" fg:x="638" fg:w="20"/><text x="73.3313%" y="351.50">d..</text></g><g><title>hashbrown::map::make_hash (1 samples, 0.11%)</title><rect x="75.2577%" y="325" width="0.1145%" height="15" fill="rgb(214,47,5)" fg:x="657" fg:w="1"/><text x="75.5077%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="75.2577%" y="309" width="0.1145%" height="15" fill="rgb(218,159,25)" fg:x="657" fg:w="1"/><text x="75.5077%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="75.3723%" y="309" width="0.1145%" height="15" fill="rgb(215,211,28)" fg:x="658" fg:w="1"/><text x="75.6223%" y="319.50"></text></g><g><title>_ZN4core3ptr68drop_in_place$LT$atomicdatabase..database..unification..ASTValue$GT$17h0cc24a977eca2ee9E.llvm.15422632318813216770 (1 samples, 0.11%)</title><rect x="75.3723%" y="293" width="0.1145%" height="15" fill="rgb(238,59,32)" fg:x="658" fg:w="1"/><text x="75.6223%" y="303.50"></text></g><g><title>atomicdatabase::database::unification::lax_unify (4 samples, 0.46%)</title><rect x="75.3723%" y="325" width="0.4582%" height="15" fill="rgb(226,82,3)" fg:x="658" fg:w="4"/><text x="75.6223%" y="335.50"></text></g><g><title>atomicdatabase::database::unification::unify_terms (3 samples, 0.34%)</title><rect x="75.4868%" y="309" width="0.3436%" height="15" fill="rgb(240,164,32)" fg:x="659" fg:w="3"/><text x="75.7368%" y="319.50"></text></g><g><title>atomicdatabase::database::unification::unify_variable_literal (3 samples, 0.34%)</title><rect x="75.4868%" y="293" width="0.3436%" height="15" fill="rgb(232,46,7)" fg:x="659" fg:w="3"/><text x="75.7368%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.11%)</title><rect x="75.7159%" y="277" width="0.1145%" height="15" fill="rgb(229,129,53)" fg:x="661" fg:w="1"/><text x="75.9659%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="75.7159%" y="261" width="0.1145%" height="15" fill="rgb(234,188,29)" fg:x="661" fg:w="1"/><text x="75.9659%" y="271.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.69%)</title><rect x="75.3723%" y="357" width="0.6873%" height="15" fill="rgb(246,141,4)" fg:x="658" fg:w="6"/><text x="75.6223%" y="367.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::InnerFactPossibilitiesIter as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.69%)</title><rect x="75.3723%" y="341" width="0.6873%" height="15" fill="rgb(229,23,39)" fg:x="658" fg:w="6"/><text x="75.6223%" y="351.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (2 samples, 0.23%)</title><rect x="75.8305%" y="325" width="0.2291%" height="15" fill="rgb(206,12,3)" fg:x="662" fg:w="2"/><text x="76.0805%" y="335.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (345 samples, 39.52%)</title><rect x="37.3425%" y="373" width="39.5189%" height="15" fill="rgb(252,226,20)" fg:x="326" fg:w="345"/><text x="37.5925%" y="383.50">&lt;atomicdatabase::database::backtracking::PossibleBindings as cor..</text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.80%)</title><rect x="76.0596%" y="357" width="0.8018%" height="15" fill="rgb(216,123,35)" fg:x="664" fg:w="7"/><text x="76.3096%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.23%)</title><rect x="76.6323%" y="341" width="0.2291%" height="15" fill="rgb(212,68,40)" fg:x="669" fg:w="2"/><text x="76.8823%" y="351.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.11%)</title><rect x="76.9759%" y="357" width="0.1145%" height="15" fill="rgb(254,125,32)" fg:x="672" fg:w="1"/><text x="77.2259%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;atomicdatabase::database::backtracking::Constraint&gt; (1 samples, 0.11%)</title><rect x="76.9759%" y="341" width="0.1145%" height="15" fill="rgb(253,97,22)" fg:x="672" fg:w="1"/><text x="77.2259%" y="351.50"></text></g><g><title>_ZN4core3ptr78drop_in_place$LT$$u5b$atomicdatabase..database..unification..ASTValue$u5d$$GT$17hff25821d9680c57fE.llvm.618350854987019679 (1 samples, 0.11%)</title><rect x="76.9759%" y="325" width="0.1145%" height="15" fill="rgb(241,101,14)" fg:x="672" fg:w="1"/><text x="77.2259%" y="335.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.11%)</title><rect x="76.9759%" y="309" width="0.1145%" height="15" fill="rgb(238,103,29)" fg:x="672" fg:w="1"/><text x="77.2259%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.11%)</title><rect x="76.9759%" y="293" width="0.1145%" height="15" fill="rgb(233,195,47)" fg:x="672" fg:w="1"/><text x="77.2259%" y="303.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (368 samples, 42.15%)</title><rect x="35.0515%" y="405" width="42.1535%" height="15" fill="rgb(246,218,30)" fg:x="306" fg:w="368"/><text x="35.3015%" y="415.50">&lt;atomicdatabase::database::backtracking::PossibleBindings as core::it..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (348 samples, 39.86%)</title><rect x="37.3425%" y="389" width="39.8625%" height="15" fill="rgb(219,145,47)" fg:x="326" fg:w="348"/><text x="37.5925%" y="399.50">&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::tra..</text></g><g><title>core::ptr::drop_in_place&lt;atomicdatabase::database::backtracking::PossibleBindings&gt; (3 samples, 0.34%)</title><rect x="76.8614%" y="373" width="0.3436%" height="15" fill="rgb(243,12,26)" fg:x="671" fg:w="3"/><text x="77.1114%" y="383.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="77.0905%" y="357" width="0.1145%" height="15" fill="rgb(214,87,16)" fg:x="673" fg:w="1"/><text x="77.3405%" y="367.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="77.0905%" y="341" width="0.1145%" height="15" fill="rgb(208,99,42)" fg:x="673" fg:w="1"/><text x="77.3405%" y="351.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.11%)</title><rect x="77.2050%" y="405" width="0.1145%" height="15" fill="rgb(253,99,2)" fg:x="674" fg:w="1"/><text x="77.4550%" y="415.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::BacktrackingQuery as core::iter::traits::iterator::Iterator&gt;::next (376 samples, 43.07%)</title><rect x="34.4788%" y="421" width="43.0699%" height="15" fill="rgb(220,168,23)" fg:x="301" fg:w="376"/><text x="34.7288%" y="431.50">&lt;atomicdatabase::database::backtracking::BacktrackingQuery as core::it..</text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.23%)</title><rect x="77.3196%" y="405" width="0.2291%" height="15" fill="rgb(242,38,24)" fg:x="675" fg:w="2"/><text x="77.5696%" y="415.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="77.4341%" y="389" width="0.1145%" height="15" fill="rgb(225,182,9)" fg:x="676" fg:w="1"/><text x="77.6841%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="77.5487%" y="389" width="0.2291%" height="15" fill="rgb(243,178,37)" fg:x="677" fg:w="2"/><text x="77.7987%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="77.7778%" y="357" width="0.1145%" height="15" fill="rgb(232,139,19)" fg:x="679" fg:w="1"/><text x="78.0278%" y="367.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="77.7778%" y="341" width="0.1145%" height="15" fill="rgb(225,201,24)" fg:x="679" fg:w="1"/><text x="78.0278%" y="351.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17hc74b6d940613d662E.llvm.15422632318813216770 (2 samples, 0.23%)</title><rect x="77.8923%" y="325" width="0.2291%" height="15" fill="rgb(221,47,46)" fg:x="680" fg:w="2"/><text x="78.1423%" y="335.50"></text></g><g><title>malloc (2 samples, 0.23%)</title><rect x="77.8923%" y="309" width="0.2291%" height="15" fill="rgb(249,23,13)" fg:x="680" fg:w="2"/><text x="78.1423%" y="319.50"></text></g><g><title>_int_malloc (2 samples, 0.23%)</title><rect x="77.8923%" y="293" width="0.2291%" height="15" fill="rgb(219,9,5)" fg:x="680" fg:w="2"/><text x="78.1423%" y="303.50"></text></g><g><title>atomicdatabase::database::unification::unify_terms (4 samples, 0.46%)</title><rect x="77.7778%" y="389" width="0.4582%" height="15" fill="rgb(254,171,16)" fg:x="679" fg:w="4"/><text x="78.0278%" y="399.50"></text></g><g><title>atomicdatabase::database::unification::unify_variable_literal (4 samples, 0.46%)</title><rect x="77.7778%" y="373" width="0.4582%" height="15" fill="rgb(230,171,20)" fg:x="679" fg:w="4"/><text x="78.0278%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V&gt; as core::convert::From&lt;[(K,V): N]&gt;&gt;::from (3 samples, 0.34%)</title><rect x="77.8923%" y="357" width="0.3436%" height="15" fill="rgb(210,71,41)" fg:x="680" fg:w="3"/><text x="78.1423%" y="367.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3 samples, 0.34%)</title><rect x="77.8923%" y="341" width="0.3436%" height="15" fill="rgb(206,173,20)" fg:x="680" fg:w="3"/><text x="78.1423%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="78.1214%" y="325" width="0.1145%" height="15" fill="rgb(233,88,34)" fg:x="682" fg:w="1"/><text x="78.3714%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.11%)</title><rect x="78.1214%" y="309" width="0.1145%" height="15" fill="rgb(223,209,46)" fg:x="682" fg:w="1"/><text x="78.3714%" y="319.50"></text></g><g><title>atomicdatabase::database::unification::unify_terms (7 samples, 0.80%)</title><rect x="77.5487%" y="405" width="0.8018%" height="15" fill="rgb(250,43,18)" fg:x="677" fg:w="7"/><text x="77.7987%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.11%)</title><rect x="78.2360%" y="389" width="0.1145%" height="15" fill="rgb(208,13,10)" fg:x="683" fg:w="1"/><text x="78.4860%" y="399.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (385 samples, 44.10%)</title><rect x="34.3643%" y="453" width="44.1008%" height="15" fill="rgb(212,200,36)" fg:x="300" fg:w="385"/><text x="34.6143%" y="463.50">&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (384 samples, 43.99%)</title><rect x="34.4788%" y="437" width="43.9863%" height="15" fill="rgb(225,90,30)" fg:x="301" fg:w="384"/><text x="34.7288%" y="447.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::It..</text></g><g><title>atomicdatabase::database::unification::unify_get_variable_value (8 samples, 0.92%)</title><rect x="77.5487%" y="421" width="0.9164%" height="15" fill="rgb(236,182,39)" fg:x="677" fg:w="8"/><text x="77.7987%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.11%)</title><rect x="78.3505%" y="405" width="0.1145%" height="15" fill="rgb(212,144,35)" fg:x="684" fg:w="1"/><text x="78.6005%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="79.8396%" y="245" width="0.1145%" height="15" fill="rgb(228,63,44)" fg:x="697" fg:w="1"/><text x="80.0896%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="79.8396%" y="229" width="0.1145%" height="15" fill="rgb(228,109,6)" fg:x="697" fg:w="1"/><text x="80.0896%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="79.8396%" y="213" width="0.1145%" height="15" fill="rgb(238,117,24)" fg:x="697" fg:w="1"/><text x="80.0896%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="79.8396%" y="197" width="0.1145%" height="15" fill="rgb(242,26,26)" fg:x="697" fg:w="1"/><text x="80.0896%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="79.8396%" y="181" width="0.1145%" height="15" fill="rgb(221,92,48)" fg:x="697" fg:w="1"/><text x="80.0896%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="79.8396%" y="165" width="0.1145%" height="15" fill="rgb(209,209,32)" fg:x="697" fg:w="1"/><text x="80.0896%" y="175.50"></text></g><g><title>__rust_alloc (1 samples, 0.11%)</title><rect x="79.8396%" y="149" width="0.1145%" height="15" fill="rgb(221,70,22)" fg:x="697" fg:w="1"/><text x="80.0896%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.46%)</title><rect x="79.6105%" y="357" width="0.4582%" height="15" fill="rgb(248,145,5)" fg:x="695" fg:w="4"/><text x="79.8605%" y="367.50"></text></g><g><title>_ZN72_$LT$atomicdatabase..database..DBValue$u20$as$u20$core..clone..Clone$GT$5clone17heaa4f8ffffde10d3E.llvm.2414314873794538956 (3 samples, 0.34%)</title><rect x="79.7251%" y="341" width="0.3436%" height="15" fill="rgb(226,116,26)" fg:x="696" fg:w="3"/><text x="79.9751%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="79.8396%" y="325" width="0.2291%" height="15" fill="rgb(244,5,17)" fg:x="697" fg:w="2"/><text x="80.0896%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="79.8396%" y="309" width="0.2291%" height="15" fill="rgb(252,159,33)" fg:x="697" fg:w="2"/><text x="80.0896%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.23%)</title><rect x="79.8396%" y="293" width="0.2291%" height="15" fill="rgb(206,71,0)" fg:x="697" fg:w="2"/><text x="80.0896%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.23%)</title><rect x="79.8396%" y="277" width="0.2291%" height="15" fill="rgb(233,118,54)" fg:x="697" fg:w="2"/><text x="80.0896%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.23%)</title><rect x="79.8396%" y="261" width="0.2291%" height="15" fill="rgb(234,83,48)" fg:x="697" fg:w="2"/><text x="80.0896%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.11%)</title><rect x="79.9542%" y="245" width="0.1145%" height="15" fill="rgb(228,3,54)" fg:x="698" fg:w="1"/><text x="80.2042%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="79.9542%" y="229" width="0.1145%" height="15" fill="rgb(226,155,13)" fg:x="698" fg:w="1"/><text x="80.2042%" y="239.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="79.9542%" y="213" width="0.1145%" height="15" fill="rgb(241,28,37)" fg:x="698" fg:w="1"/><text x="80.2042%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="80.0687%" y="357" width="0.1145%" height="15" fill="rgb(233,93,10)" fg:x="699" fg:w="1"/><text x="80.3187%" y="367.50"></text></g><g><title>_ZN4core3ptr78drop_in_place$LT$$u5b$atomicdatabase..database..unification..ASTValue$u5d$$GT$17hff25821d9680c57fE.llvm.618350854987019679 (5 samples, 0.57%)</title><rect x="80.1833%" y="357" width="0.5727%" height="15" fill="rgb(225,113,19)" fg:x="700" fg:w="5"/><text x="80.4333%" y="367.50"></text></g><g><title>cfree@GLIBC_2.2.5 (5 samples, 0.57%)</title><rect x="80.1833%" y="341" width="0.5727%" height="15" fill="rgb(241,2,18)" fg:x="700" fg:w="5"/><text x="80.4333%" y="351.50"></text></g><g><title>_int_free (5 samples, 0.57%)</title><rect x="80.1833%" y="325" width="0.5727%" height="15" fill="rgb(228,207,21)" fg:x="700" fg:w="5"/><text x="80.4333%" y="335.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (5 samples, 0.57%)</title><rect x="81.0997%" y="341" width="0.5727%" height="15" fill="rgb(213,211,35)" fg:x="708" fg:w="5"/><text x="81.3497%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.34%)</title><rect x="81.3288%" y="325" width="0.3436%" height="15" fill="rgb(209,83,10)" fg:x="710" fg:w="3"/><text x="81.5788%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.23%)</title><rect x="81.4433%" y="309" width="0.2291%" height="15" fill="rgb(209,164,1)" fg:x="711" fg:w="2"/><text x="81.6933%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="81.5578%" y="293" width="0.1145%" height="15" fill="rgb(213,184,43)" fg:x="712" fg:w="1"/><text x="81.8078%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 1.15%)</title><rect x="81.6724%" y="341" width="1.1455%" height="15" fill="rgb(231,61,34)" fg:x="713" fg:w="10"/><text x="81.9224%" y="351.50"></text></g><g><title>&lt;atomicdatabase::database::unification::ASTValue as core::clone::Clone&gt;::clone (5 samples, 0.57%)</title><rect x="82.2451%" y="325" width="0.5727%" height="15" fill="rgb(235,75,3)" fg:x="718" fg:w="5"/><text x="82.4951%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="82.5888%" y="309" width="0.2291%" height="15" fill="rgb(220,106,47)" fg:x="721" fg:w="2"/><text x="82.8388%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="82.5888%" y="293" width="0.2291%" height="15" fill="rgb(210,196,33)" fg:x="721" fg:w="2"/><text x="82.8388%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.23%)</title><rect x="82.5888%" y="277" width="0.2291%" height="15" fill="rgb(229,154,42)" fg:x="721" fg:w="2"/><text x="82.8388%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.23%)</title><rect x="82.5888%" y="261" width="0.2291%" height="15" fill="rgb(228,114,26)" fg:x="721" fg:w="2"/><text x="82.8388%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.23%)</title><rect x="82.5888%" y="245" width="0.2291%" height="15" fill="rgb(208,144,1)" fg:x="721" fg:w="2"/><text x="82.8388%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.23%)</title><rect x="82.5888%" y="229" width="0.2291%" height="15" fill="rgb(239,112,37)" fg:x="721" fg:w="2"/><text x="82.8388%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.23%)</title><rect x="82.5888%" y="213" width="0.2291%" height="15" fill="rgb(210,96,50)" fg:x="721" fg:w="2"/><text x="82.8388%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.23%)</title><rect x="82.5888%" y="197" width="0.2291%" height="15" fill="rgb(222,178,2)" fg:x="721" fg:w="2"/><text x="82.8388%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.23%)</title><rect x="82.5888%" y="181" width="0.2291%" height="15" fill="rgb(226,74,18)" fg:x="721" fg:w="2"/><text x="82.8388%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.23%)</title><rect x="82.5888%" y="165" width="0.2291%" height="15" fill="rgb(225,67,54)" fg:x="721" fg:w="2"/><text x="82.8388%" y="175.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.23%)</title><rect x="82.5888%" y="149" width="0.2291%" height="15" fill="rgb(251,92,32)" fg:x="721" fg:w="2"/><text x="82.8388%" y="159.50"></text></g><g><title>malloc (2 samples, 0.23%)</title><rect x="82.5888%" y="133" width="0.2291%" height="15" fill="rgb(228,149,22)" fg:x="721" fg:w="2"/><text x="82.8388%" y="143.50"></text></g><g><title>_ZN4core3ptr68drop_in_place$LT$atomicdatabase..database..unification..ASTValue$GT$17h0cc24a977eca2ee9E.llvm.15422632318813216770 (3 samples, 0.34%)</title><rect x="83.0470%" y="325" width="0.3436%" height="15" fill="rgb(243,54,13)" fg:x="725" fg:w="3"/><text x="83.2970%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.80%)</title><rect x="82.8179%" y="341" width="0.8018%" height="15" fill="rgb(243,180,28)" fg:x="723" fg:w="7"/><text x="83.0679%" y="351.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.23%)</title><rect x="83.3906%" y="325" width="0.2291%" height="15" fill="rgb(208,167,24)" fg:x="728" fg:w="2"/><text x="83.6406%" y="335.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="83.5052%" y="309" width="0.1145%" height="15" fill="rgb(245,73,45)" fg:x="729" fg:w="1"/><text x="83.7552%" y="319.50"></text></g><g><title>&lt;atomicdatabase::database::DBValue as core::cmp::PartialEq&gt;::eq (2 samples, 0.23%)</title><rect x="83.7342%" y="325" width="0.2291%" height="15" fill="rgb(237,203,48)" fg:x="731" fg:w="2"/><text x="83.9842%" y="335.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.23%)</title><rect x="83.7342%" y="309" width="0.2291%" height="15" fill="rgb(211,197,16)" fg:x="731" fg:w="2"/><text x="83.9842%" y="319.50"></text></g><g><title>_int_free (2 samples, 0.23%)</title><rect x="83.7342%" y="293" width="0.2291%" height="15" fill="rgb(243,99,51)" fg:x="731" fg:w="2"/><text x="83.9842%" y="303.50"></text></g><g><title>&lt;atomicdatabase::database::unification::ASTValue as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="84.8797%" y="309" width="0.1145%" height="15" fill="rgb(215,123,29)" fg:x="741" fg:w="1"/><text x="85.1297%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="84.8797%" y="293" width="0.1145%" height="15" fill="rgb(239,186,37)" fg:x="741" fg:w="1"/><text x="85.1297%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.69%)</title><rect x="85.4525%" y="293" width="0.6873%" height="15" fill="rgb(252,136,39)" fg:x="746" fg:w="6"/><text x="85.7025%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.69%)</title><rect x="85.4525%" y="277" width="0.6873%" height="15" fill="rgb(223,213,32)" fg:x="746" fg:w="6"/><text x="85.7025%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.69%)</title><rect x="85.4525%" y="261" width="0.6873%" height="15" fill="rgb(233,115,5)" fg:x="746" fg:w="6"/><text x="85.7025%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.69%)</title><rect x="85.4525%" y="245" width="0.6873%" height="15" fill="rgb(207,226,44)" fg:x="746" fg:w="6"/><text x="85.7025%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.69%)</title><rect x="85.4525%" y="229" width="0.6873%" height="15" fill="rgb(208,126,0)" fg:x="746" fg:w="6"/><text x="85.7025%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.69%)</title><rect x="85.4525%" y="213" width="0.6873%" height="15" fill="rgb(244,66,21)" fg:x="746" fg:w="6"/><text x="85.7025%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.69%)</title><rect x="85.4525%" y="197" width="0.6873%" height="15" fill="rgb(222,97,12)" fg:x="746" fg:w="6"/><text x="85.7025%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.69%)</title><rect x="85.4525%" y="181" width="0.6873%" height="15" fill="rgb(219,213,19)" fg:x="746" fg:w="6"/><text x="85.7025%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.57%)</title><rect x="85.5670%" y="165" width="0.5727%" height="15" fill="rgb(252,169,30)" fg:x="747" fg:w="5"/><text x="85.8170%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.57%)</title><rect x="85.5670%" y="149" width="0.5727%" height="15" fill="rgb(206,32,51)" fg:x="747" fg:w="5"/><text x="85.8170%" y="159.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.57%)</title><rect x="85.5670%" y="133" width="0.5727%" height="15" fill="rgb(250,172,42)" fg:x="747" fg:w="5"/><text x="85.8170%" y="143.50"></text></g><g><title>malloc (5 samples, 0.57%)</title><rect x="85.5670%" y="117" width="0.5727%" height="15" fill="rgb(209,34,43)" fg:x="747" fg:w="5"/><text x="85.8170%" y="127.50"></text></g><g><title>_int_malloc (4 samples, 0.46%)</title><rect x="85.6816%" y="101" width="0.4582%" height="15" fill="rgb(223,11,35)" fg:x="748" fg:w="4"/><text x="85.9316%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.23%)</title><rect x="86.5979%" y="197" width="0.2291%" height="15" fill="rgb(251,219,26)" fg:x="756" fg:w="2"/><text x="86.8479%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.23%)</title><rect x="86.5979%" y="181" width="0.2291%" height="15" fill="rgb(231,119,3)" fg:x="756" fg:w="2"/><text x="86.8479%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.23%)</title><rect x="86.5979%" y="165" width="0.2291%" height="15" fill="rgb(216,97,11)" fg:x="756" fg:w="2"/><text x="86.8479%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="86.7125%" y="149" width="0.1145%" height="15" fill="rgb(223,59,9)" fg:x="757" fg:w="1"/><text x="86.9625%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="86.7125%" y="133" width="0.1145%" height="15" fill="rgb(233,93,31)" fg:x="757" fg:w="1"/><text x="86.9625%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="86.7125%" y="117" width="0.1145%" height="15" fill="rgb(239,81,33)" fg:x="757" fg:w="1"/><text x="86.9625%" y="127.50"></text></g><g><title>malloc (1 samples, 0.11%)</title><rect x="86.7125%" y="101" width="0.1145%" height="15" fill="rgb(213,120,34)" fg:x="757" fg:w="1"/><text x="86.9625%" y="111.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="86.7125%" y="85" width="0.1145%" height="15" fill="rgb(243,49,53)" fg:x="757" fg:w="1"/><text x="86.9625%" y="95.50"></text></g><g><title>&lt;atomicdatabase::database::unification::ASTValue as core::clone::Clone&gt;::clone (7 samples, 0.80%)</title><rect x="86.1397%" y="293" width="0.8018%" height="15" fill="rgb(247,216,33)" fg:x="752" fg:w="7"/><text x="86.3897%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.34%)</title><rect x="86.5979%" y="277" width="0.3436%" height="15" fill="rgb(226,26,14)" fg:x="756" fg:w="3"/><text x="86.8479%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.34%)</title><rect x="86.5979%" y="261" width="0.3436%" height="15" fill="rgb(215,49,53)" fg:x="756" fg:w="3"/><text x="86.8479%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.34%)</title><rect x="86.5979%" y="245" width="0.3436%" height="15" fill="rgb(245,162,40)" fg:x="756" fg:w="3"/><text x="86.8479%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.34%)</title><rect x="86.5979%" y="229" width="0.3436%" height="15" fill="rgb(229,68,17)" fg:x="756" fg:w="3"/><text x="86.8479%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.34%)</title><rect x="86.5979%" y="213" width="0.3436%" height="15" fill="rgb(213,182,10)" fg:x="756" fg:w="3"/><text x="86.8479%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.11%)</title><rect x="86.8270%" y="197" width="0.1145%" height="15" fill="rgb(245,125,30)" fg:x="758" fg:w="1"/><text x="87.0770%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="86.8270%" y="181" width="0.1145%" height="15" fill="rgb(232,202,2)" fg:x="758" fg:w="1"/><text x="87.0770%" y="191.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="86.8270%" y="165" width="0.1145%" height="15" fill="rgb(237,140,51)" fg:x="758" fg:w="1"/><text x="87.0770%" y="175.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 2.06%)</title><rect x="84.9943%" y="309" width="2.0619%" height="15" fill="rgb(236,157,25)" fg:x="742" fg:w="18"/><text x="85.2443%" y="319.50">&lt;..</text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="86.9416%" y="293" width="0.1145%" height="15" fill="rgb(219,209,0)" fg:x="759" fg:w="1"/><text x="87.1916%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.57%)</title><rect x="87.0561%" y="309" width="0.5727%" height="15" fill="rgb(240,116,54)" fg:x="760" fg:w="5"/><text x="87.3061%" y="319.50"></text></g><g><title>cfree@GLIBC_2.2.5 (3 samples, 0.34%)</title><rect x="87.2852%" y="293" width="0.3436%" height="15" fill="rgb(216,10,36)" fg:x="762" fg:w="3"/><text x="87.5352%" y="303.50"></text></g><g><title>_int_free (2 samples, 0.23%)</title><rect x="87.3998%" y="277" width="0.2291%" height="15" fill="rgb(222,72,44)" fg:x="763" fg:w="2"/><text x="87.6498%" y="287.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17hc74b6d940613d662E.llvm.15422632318813216770 (1 samples, 0.11%)</title><rect x="88.3162%" y="277" width="0.1145%" height="15" fill="rgb(232,159,9)" fg:x="771" fg:w="1"/><text x="88.5662%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V&gt; as core::convert::From&lt;[(K,V): N]&gt;&gt;::from (10 samples, 1.15%)</title><rect x="87.6289%" y="309" width="1.1455%" height="15" fill="rgb(210,39,32)" fg:x="765" fg:w="10"/><text x="87.8789%" y="319.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (9 samples, 1.03%)</title><rect x="87.7434%" y="293" width="1.0309%" height="15" fill="rgb(216,194,45)" fg:x="766" fg:w="9"/><text x="87.9934%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.34%)</title><rect x="88.4307%" y="277" width="0.3436%" height="15" fill="rgb(218,18,35)" fg:x="772" fg:w="3"/><text x="88.6807%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.11%)</title><rect x="88.6598%" y="261" width="0.1145%" height="15" fill="rgb(207,83,51)" fg:x="774" fg:w="1"/><text x="88.9098%" y="271.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.11%)</title><rect x="88.7743%" y="309" width="0.1145%" height="15" fill="rgb(225,63,43)" fg:x="775" fg:w="1"/><text x="89.0243%" y="319.50"></text></g><g><title>cfree@GLIBC_2.2.5 (3 samples, 0.34%)</title><rect x="88.8889%" y="309" width="0.3436%" height="15" fill="rgb(207,57,36)" fg:x="776" fg:w="3"/><text x="89.1389%" y="319.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="89.1180%" y="293" width="0.1145%" height="15" fill="rgb(216,99,33)" fg:x="778" fg:w="1"/><text x="89.3680%" y="303.50"></text></g><g><title>atomicdatabase::database::unification::unify_terms (56 samples, 6.41%)</title><rect x="83.6197%" y="341" width="6.4147%" height="15" fill="rgb(225,42,16)" fg:x="730" fg:w="56"/><text x="83.8697%" y="351.50">atomicda..</text></g><g><title>atomicdatabase::database::unification::unify_variable_literal (53 samples, 6.07%)</title><rect x="83.9633%" y="325" width="6.0710%" height="15" fill="rgb(220,201,45)" fg:x="733" fg:w="53"/><text x="84.2133%" y="335.50">atomicda..</text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.80%)</title><rect x="89.2325%" y="309" width="0.8018%" height="15" fill="rgb(225,33,4)" fg:x="779" fg:w="7"/><text x="89.4825%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.34%)</title><rect x="89.6907%" y="293" width="0.3436%" height="15" fill="rgb(224,33,50)" fg:x="783" fg:w="3"/><text x="89.9407%" y="303.50"></text></g><g><title>atomicdatabase::database::unification::lax_unify (84 samples, 9.62%)</title><rect x="80.7560%" y="357" width="9.6220%" height="15" fill="rgb(246,198,51)" fg:x="705" fg:w="84"/><text x="81.0060%" y="367.50">atomicdatabase..</text></g><g><title>cfree@GLIBC_2.2.5 (3 samples, 0.34%)</title><rect x="90.0344%" y="341" width="0.3436%" height="15" fill="rgb(205,22,4)" fg:x="786" fg:w="3"/><text x="90.2844%" y="351.50"></text></g><g><title>_int_free (3 samples, 0.34%)</title><rect x="90.0344%" y="325" width="0.3436%" height="15" fill="rgb(206,3,8)" fg:x="786" fg:w="3"/><text x="90.2844%" y="335.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="90.3780%" y="357" width="0.1145%" height="15" fill="rgb(251,23,15)" fg:x="789" fg:w="1"/><text x="90.6280%" y="367.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="90.3780%" y="341" width="0.1145%" height="15" fill="rgb(252,88,28)" fg:x="789" fg:w="1"/><text x="90.6280%" y="351.50"></text></g><g><title>_ZN7dashmap24DashMap$LT$K$C$V$C$S$GT$10hash_usize17h3aec2b0458dda4b9E.llvm.14781992193672218318 (4 samples, 0.46%)</title><rect x="90.6071%" y="341" width="0.4582%" height="15" fill="rgb(212,127,14)" fg:x="791" fg:w="4"/><text x="90.8571%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.34%)</title><rect x="90.7216%" y="325" width="0.3436%" height="15" fill="rgb(247,145,37)" fg:x="792" fg:w="3"/><text x="90.9716%" y="335.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.11%)</title><rect x="91.0653%" y="341" width="0.1145%" height="15" fill="rgb(209,117,53)" fg:x="795" fg:w="1"/><text x="91.3153%" y="351.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (8 samples, 0.92%)</title><rect x="90.4926%" y="357" width="0.9164%" height="15" fill="rgb(212,90,42)" fg:x="790" fg:w="8"/><text x="90.7426%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.23%)</title><rect x="91.1798%" y="341" width="0.2291%" height="15" fill="rgb(218,164,37)" fg:x="796" fg:w="2"/><text x="91.4298%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="91.2944%" y="325" width="0.1145%" height="15" fill="rgb(246,65,34)" fg:x="797" fg:w="1"/><text x="91.5444%" y="335.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::InnerFactPossibilitiesIter as core::iter::traits::iterator::Iterator&gt;::next (107 samples, 12.26%)</title><rect x="79.4960%" y="373" width="12.2566%" height="15" fill="rgb(231,100,33)" fg:x="694" fg:w="107"/><text x="79.7460%" y="383.50">&lt;atomicdatabase::d..</text></g><g><title>malloc (3 samples, 0.34%)</title><rect x="91.4089%" y="357" width="0.3436%" height="15" fill="rgb(228,126,14)" fg:x="798" fg:w="3"/><text x="91.6589%" y="367.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="91.7526%" y="373" width="0.1145%" height="15" fill="rgb(215,173,21)" fg:x="801" fg:w="1"/><text x="92.0026%" y="383.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::InnerFactPossibilitiesIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="91.7526%" y="357" width="0.1145%" height="15" fill="rgb(210,6,40)" fg:x="801" fg:w="1"/><text x="92.0026%" y="367.50"></text></g><g><title>atomicdatabase::database::unification::lax_unify (1 samples, 0.11%)</title><rect x="91.7526%" y="341" width="0.1145%" height="15" fill="rgb(212,48,18)" fg:x="801" fg:w="1"/><text x="92.0026%" y="351.50"></text></g><g><title>atomicdatabase::database::unification::unify_terms (1 samples, 0.11%)</title><rect x="91.7526%" y="325" width="0.1145%" height="15" fill="rgb(230,214,11)" fg:x="801" fg:w="1"/><text x="92.0026%" y="335.50"></text></g><g><title>atomicdatabase::database::unification::unify_variable_literal (1 samples, 0.11%)</title><rect x="91.7526%" y="309" width="0.1145%" height="15" fill="rgb(254,105,39)" fg:x="801" fg:w="1"/><text x="92.0026%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.11%)</title><rect x="91.7526%" y="293" width="0.1145%" height="15" fill="rgb(245,158,5)" fg:x="801" fg:w="1"/><text x="92.0026%" y="303.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (115 samples, 13.17%)</title><rect x="78.8087%" y="421" width="13.1730%" height="15" fill="rgb(249,208,11)" fg:x="688" fg:w="115"/><text x="79.0587%" y="431.50">&lt;atomicdatabase::dat..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (111 samples, 12.71%)</title><rect x="79.2669%" y="405" width="12.7148%" height="15" fill="rgb(210,39,28)" fg:x="692" fg:w="111"/><text x="79.5169%" y="415.50">&lt;core::iter::adapte..</text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (111 samples, 12.71%)</title><rect x="79.2669%" y="389" width="12.7148%" height="15" fill="rgb(211,56,53)" fg:x="692" fg:w="111"/><text x="79.5169%" y="399.50">&lt;atomicdatabase::da..</text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.11%)</title><rect x="91.8671%" y="373" width="0.1145%" height="15" fill="rgb(226,201,30)" fg:x="802" fg:w="1"/><text x="92.1171%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (119 samples, 13.63%)</title><rect x="78.4651%" y="453" width="13.6312%" height="15" fill="rgb(239,101,34)" fg:x="685" fg:w="119"/><text x="78.7151%" y="463.50">&lt;core::iter::adapters..</text></g><g><title>&lt;atomicdatabase::database::backtracking::BacktrackingQuery as core::iter::traits::iterator::Iterator&gt;::next (119 samples, 13.63%)</title><rect x="78.4651%" y="437" width="13.6312%" height="15" fill="rgb(226,209,5)" fg:x="685" fg:w="119"/><text x="78.7151%" y="447.50">&lt;atomicdatabase::data..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.11%)</title><rect x="91.9817%" y="421" width="0.1145%" height="15" fill="rgb(250,105,47)" fg:x="803" fg:w="1"/><text x="92.2317%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="91.9817%" y="405" width="0.1145%" height="15" fill="rgb(230,72,3)" fg:x="803" fg:w="1"/><text x="92.2317%" y="415.50"></text></g><g><title>&lt;atomicdatabase::database::unification::ASTValue as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="92.0962%" y="437" width="0.2291%" height="15" fill="rgb(232,218,39)" fg:x="804" fg:w="2"/><text x="92.3462%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="92.2108%" y="421" width="0.1145%" height="15" fill="rgb(248,166,6)" fg:x="805" fg:w="1"/><text x="92.4608%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="92.2108%" y="405" width="0.1145%" height="15" fill="rgb(247,89,20)" fg:x="805" fg:w="1"/><text x="92.4608%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="92.2108%" y="389" width="0.1145%" height="15" fill="rgb(248,130,54)" fg:x="805" fg:w="1"/><text x="92.4608%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="92.2108%" y="373" width="0.1145%" height="15" fill="rgb(234,196,4)" fg:x="805" fg:w="1"/><text x="92.4608%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="92.2108%" y="357" width="0.1145%" height="15" fill="rgb(250,143,31)" fg:x="805" fg:w="1"/><text x="92.4608%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="92.2108%" y="341" width="0.1145%" height="15" fill="rgb(211,110,34)" fg:x="805" fg:w="1"/><text x="92.4608%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="92.2108%" y="325" width="0.1145%" height="15" fill="rgb(215,124,48)" fg:x="805" fg:w="1"/><text x="92.4608%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="92.2108%" y="309" width="0.1145%" height="15" fill="rgb(216,46,13)" fg:x="805" fg:w="1"/><text x="92.4608%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="92.2108%" y="293" width="0.1145%" height="15" fill="rgb(205,184,25)" fg:x="805" fg:w="1"/><text x="92.4608%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="92.2108%" y="277" width="0.1145%" height="15" fill="rgb(228,1,10)" fg:x="805" fg:w="1"/><text x="92.4608%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="92.2108%" y="261" width="0.1145%" height="15" fill="rgb(213,116,27)" fg:x="805" fg:w="1"/><text x="92.4608%" y="271.50"></text></g><g><title>malloc (1 samples, 0.11%)</title><rect x="92.2108%" y="245" width="0.1145%" height="15" fill="rgb(241,95,50)" fg:x="805" fg:w="1"/><text x="92.4608%" y="255.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="92.3253%" y="437" width="0.1145%" height="15" fill="rgb(238,48,32)" fg:x="806" fg:w="1"/><text x="92.5753%" y="447.50"></text></g><g><title>&lt;atomicdatabase::database::unification::ASTValue as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="92.3253%" y="421" width="0.1145%" height="15" fill="rgb(235,113,49)" fg:x="806" fg:w="1"/><text x="92.5753%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="92.4399%" y="421" width="0.1145%" height="15" fill="rgb(205,127,43)" fg:x="807" fg:w="1"/><text x="92.6899%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="92.4399%" y="405" width="0.1145%" height="15" fill="rgb(250,162,2)" fg:x="807" fg:w="1"/><text x="92.6899%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="92.5544%" y="421" width="0.1145%" height="15" fill="rgb(220,13,41)" fg:x="808" fg:w="1"/><text x="92.8044%" y="431.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="92.5544%" y="405" width="0.1145%" height="15" fill="rgb(249,221,25)" fg:x="808" fg:w="1"/><text x="92.8044%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.11%)</title><rect x="92.6690%" y="421" width="0.1145%" height="15" fill="rgb(215,208,19)" fg:x="809" fg:w="1"/><text x="92.9190%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.11%)</title><rect x="92.6690%" y="405" width="0.1145%" height="15" fill="rgb(236,175,2)" fg:x="809" fg:w="1"/><text x="92.9190%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="92.6690%" y="389" width="0.1145%" height="15" fill="rgb(241,52,2)" fg:x="809" fg:w="1"/><text x="92.9190%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.11%)</title><rect x="92.6690%" y="373" width="0.1145%" height="15" fill="rgb(248,140,14)" fg:x="809" fg:w="1"/><text x="92.9190%" y="383.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.11%)</title><rect x="92.6690%" y="357" width="0.1145%" height="15" fill="rgb(253,22,42)" fg:x="809" fg:w="1"/><text x="92.9190%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="93.2417%" y="405" width="0.1145%" height="15" fill="rgb(234,61,47)" fg:x="814" fg:w="1"/><text x="93.4917%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="93.2417%" y="389" width="0.1145%" height="15" fill="rgb(208,226,15)" fg:x="814" fg:w="1"/><text x="93.4917%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="93.2417%" y="373" width="0.1145%" height="15" fill="rgb(217,221,4)" fg:x="814" fg:w="1"/><text x="93.4917%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="93.2417%" y="357" width="0.1145%" height="15" fill="rgb(212,174,34)" fg:x="814" fg:w="1"/><text x="93.4917%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="93.2417%" y="341" width="0.1145%" height="15" fill="rgb(253,83,4)" fg:x="814" fg:w="1"/><text x="93.4917%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.11%)</title><rect x="93.2417%" y="325" width="0.1145%" height="15" fill="rgb(250,195,49)" fg:x="814" fg:w="1"/><text x="93.4917%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="93.2417%" y="309" width="0.1145%" height="15" fill="rgb(241,192,25)" fg:x="814" fg:w="1"/><text x="93.4917%" y="319.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="93.2417%" y="293" width="0.1145%" height="15" fill="rgb(208,124,10)" fg:x="814" fg:w="1"/><text x="93.4917%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.34%)</title><rect x="93.3562%" y="405" width="0.3436%" height="15" fill="rgb(222,33,0)" fg:x="815" fg:w="3"/><text x="93.6062%" y="415.50"></text></g><g><title>&lt;atomicdatabase::database::unification::ASTValue as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="93.4708%" y="389" width="0.2291%" height="15" fill="rgb(234,209,28)" fg:x="816" fg:w="2"/><text x="93.7208%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="93.4708%" y="373" width="0.2291%" height="15" fill="rgb(224,11,23)" fg:x="816" fg:w="2"/><text x="93.7208%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="93.4708%" y="357" width="0.2291%" height="15" fill="rgb(232,99,1)" fg:x="816" fg:w="2"/><text x="93.7208%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.23%)</title><rect x="93.4708%" y="341" width="0.2291%" height="15" fill="rgb(237,95,45)" fg:x="816" fg:w="2"/><text x="93.7208%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.23%)</title><rect x="93.4708%" y="325" width="0.2291%" height="15" fill="rgb(208,109,11)" fg:x="816" fg:w="2"/><text x="93.7208%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.23%)</title><rect x="93.4708%" y="309" width="0.2291%" height="15" fill="rgb(216,190,48)" fg:x="816" fg:w="2"/><text x="93.7208%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.23%)</title><rect x="93.4708%" y="293" width="0.2291%" height="15" fill="rgb(251,171,36)" fg:x="816" fg:w="2"/><text x="93.7208%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.23%)</title><rect x="93.4708%" y="277" width="0.2291%" height="15" fill="rgb(230,62,22)" fg:x="816" fg:w="2"/><text x="93.7208%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.23%)</title><rect x="93.4708%" y="261" width="0.2291%" height="15" fill="rgb(225,114,35)" fg:x="816" fg:w="2"/><text x="93.7208%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.23%)</title><rect x="93.4708%" y="245" width="0.2291%" height="15" fill="rgb(215,118,42)" fg:x="816" fg:w="2"/><text x="93.7208%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.23%)</title><rect x="93.4708%" y="229" width="0.2291%" height="15" fill="rgb(243,119,21)" fg:x="816" fg:w="2"/><text x="93.7208%" y="239.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.23%)</title><rect x="93.4708%" y="213" width="0.2291%" height="15" fill="rgb(252,177,53)" fg:x="816" fg:w="2"/><text x="93.7208%" y="223.50"></text></g><g><title>malloc (2 samples, 0.23%)</title><rect x="93.4708%" y="197" width="0.2291%" height="15" fill="rgb(237,209,29)" fg:x="816" fg:w="2"/><text x="93.7208%" y="207.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="93.5853%" y="181" width="0.1145%" height="15" fill="rgb(212,65,23)" fg:x="817" fg:w="1"/><text x="93.8353%" y="191.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V&gt; as core::convert::From&lt;[(K,V): N]&gt;&gt;::from (2 samples, 0.23%)</title><rect x="93.6999%" y="405" width="0.2291%" height="15" fill="rgb(230,222,46)" fg:x="818" fg:w="2"/><text x="93.9499%" y="415.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.23%)</title><rect x="93.6999%" y="389" width="0.2291%" height="15" fill="rgb(215,135,32)" fg:x="818" fg:w="2"/><text x="93.9499%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="93.8144%" y="373" width="0.1145%" height="15" fill="rgb(246,101,22)" fg:x="819" fg:w="1"/><text x="94.0644%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.11%)</title><rect x="93.8144%" y="357" width="0.1145%" height="15" fill="rgb(206,107,13)" fg:x="819" fg:w="1"/><text x="94.0644%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.23%)</title><rect x="93.9290%" y="373" width="0.2291%" height="15" fill="rgb(250,100,44)" fg:x="820" fg:w="2"/><text x="94.1790%" y="383.50"></text></g><g><title>_ZN4core3ptr68drop_in_place$LT$atomicdatabase..database..unification..ASTValue$GT$17h0cc24a977eca2ee9E.llvm.15422632318813216770 (1 samples, 0.11%)</title><rect x="94.0435%" y="357" width="0.1145%" height="15" fill="rgb(231,147,38)" fg:x="821" fg:w="1"/><text x="94.2935%" y="367.50"></text></g><g><title>atomicdatabase::database::unification::unify_terms (3 samples, 0.34%)</title><rect x="93.9290%" y="405" width="0.3436%" height="15" fill="rgb(229,8,40)" fg:x="820" fg:w="3"/><text x="94.1790%" y="415.50"></text></g><g><title>atomicdatabase::database::unification::unify_variable_literal (3 samples, 0.34%)</title><rect x="93.9290%" y="389" width="0.3436%" height="15" fill="rgb(221,135,30)" fg:x="820" fg:w="3"/><text x="94.1790%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V&gt; as core::convert::From&lt;[(K,V): N]&gt;&gt;::from (1 samples, 0.11%)</title><rect x="94.1581%" y="373" width="0.1145%" height="15" fill="rgb(249,193,18)" fg:x="822" fg:w="1"/><text x="94.4081%" y="383.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="94.2726%" y="405" width="0.1145%" height="15" fill="rgb(209,133,39)" fg:x="823" fg:w="1"/><text x="94.5226%" y="415.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="94.2726%" y="389" width="0.1145%" height="15" fill="rgb(232,100,14)" fg:x="823" fg:w="1"/><text x="94.5226%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.23%)</title><rect x="94.3872%" y="405" width="0.2291%" height="15" fill="rgb(224,185,1)" fg:x="824" fg:w="2"/><text x="94.6372%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="94.5017%" y="389" width="0.1145%" height="15" fill="rgb(223,139,8)" fg:x="825" fg:w="1"/><text x="94.7517%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;atomicdatabase::database::DBValue&gt; (1 samples, 0.11%)</title><rect x="94.6163%" y="405" width="0.1145%" height="15" fill="rgb(232,213,38)" fg:x="826" fg:w="1"/><text x="94.8663%" y="415.50"></text></g><g><title>atomicdatabase::database::unification::unify_terms (18 samples, 2.06%)</title><rect x="92.7835%" y="421" width="2.0619%" height="15" fill="rgb(207,94,22)" fg:x="810" fg:w="18"/><text x="93.0335%" y="431.50">a..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="94.7308%" y="405" width="0.1145%" height="15" fill="rgb(219,183,54)" fg:x="827" fg:w="1"/><text x="94.9808%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.11%)</title><rect x="94.7308%" y="389" width="0.1145%" height="15" fill="rgb(216,185,54)" fg:x="827" fg:w="1"/><text x="94.9808%" y="399.50"></text></g><g><title>atomicdatabase::database::unification::unify_get_variable_value (22 samples, 2.52%)</title><rect x="92.4399%" y="437" width="2.5200%" height="15" fill="rgb(254,217,39)" fg:x="807" fg:w="22"/><text x="92.6899%" y="447.50">at..</text></g><g><title>core::ptr::drop_in_place&lt;atomicdatabase::database::unification::ASTValue&gt; (1 samples, 0.11%)</title><rect x="94.8454%" y="421" width="0.1145%" height="15" fill="rgb(240,178,23)" fg:x="828" fg:w="1"/><text x="95.0954%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V&gt; as core::convert::From&lt;[(K,V): N]&gt;&gt;::from (1 samples, 0.11%)</title><rect x="94.9599%" y="421" width="0.1145%" height="15" fill="rgb(218,11,47)" fg:x="829" fg:w="1"/><text x="95.2099%" y="431.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="94.9599%" y="405" width="0.1145%" height="15" fill="rgb(218,51,51)" fg:x="829" fg:w="1"/><text x="95.2099%" y="415.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17hc74b6d940613d662E.llvm.15422632318813216770 (1 samples, 0.11%)</title><rect x="94.9599%" y="389" width="0.1145%" height="15" fill="rgb(238,126,27)" fg:x="829" fg:w="1"/><text x="95.2099%" y="399.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17hc74b6d940613d662E.llvm.15422632318813216770 (1 samples, 0.11%)</title><rect x="95.1890%" y="373" width="0.1145%" height="15" fill="rgb(249,202,22)" fg:x="831" fg:w="1"/><text x="95.4390%" y="383.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (535 samples, 61.28%)</title><rect x="34.1352%" y="469" width="61.2829%" height="15" fill="rgb(254,195,49)" fg:x="298" fg:w="535"/><text x="34.3852%" y="479.50">&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;:..</text></g><g><title>atomicdatabase::database::backtracking::split_arguments (29 samples, 3.32%)</title><rect x="92.0962%" y="453" width="3.3219%" height="15" fill="rgb(208,123,14)" fg:x="804" fg:w="29"/><text x="92.3462%" y="463.50">ato..</text></g><g><title>atomicdatabase::database::unification::unify_terms (4 samples, 0.46%)</title><rect x="94.9599%" y="437" width="0.4582%" height="15" fill="rgb(224,200,8)" fg:x="829" fg:w="4"/><text x="95.2099%" y="447.50"></text></g><g><title>atomicdatabase::database::unification::unify_variable_literal (3 samples, 0.34%)</title><rect x="95.0745%" y="421" width="0.3436%" height="15" fill="rgb(217,61,36)" fg:x="830" fg:w="3"/><text x="95.3245%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V&gt; as core::convert::From&lt;[(K,V): N]&gt;&gt;::from (2 samples, 0.23%)</title><rect x="95.1890%" y="405" width="0.2291%" height="15" fill="rgb(206,35,45)" fg:x="831" fg:w="2"/><text x="95.4390%" y="415.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.23%)</title><rect x="95.1890%" y="389" width="0.2291%" height="15" fill="rgb(217,65,33)" fg:x="831" fg:w="2"/><text x="95.4390%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="95.3036%" y="373" width="0.1145%" height="15" fill="rgb(222,158,48)" fg:x="832" fg:w="1"/><text x="95.5536%" y="383.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.11%)</title><rect x="95.4181%" y="453" width="0.1145%" height="15" fill="rgb(254,2,54)" fg:x="833" fg:w="1"/><text x="95.6681%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="95.4181%" y="437" width="0.1145%" height="15" fill="rgb(250,143,38)" fg:x="833" fg:w="1"/><text x="95.6681%" y="447.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.11%)</title><rect x="95.4181%" y="421" width="0.1145%" height="15" fill="rgb(248,25,0)" fg:x="833" fg:w="1"/><text x="95.6681%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.11%)</title><rect x="95.4181%" y="405" width="0.1145%" height="15" fill="rgb(206,152,27)" fg:x="833" fg:w="1"/><text x="95.6681%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.11%)</title><rect x="95.5326%" y="437" width="0.1145%" height="15" fill="rgb(240,77,30)" fg:x="834" fg:w="1"/><text x="95.7826%" y="447.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (539 samples, 61.74%)</title><rect x="34.0206%" y="517" width="61.7411%" height="15" fill="rgb(231,5,3)" fg:x="297" fg:w="539"/><text x="34.2706%" y="527.50">&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (539 samples, 61.74%)</title><rect x="34.0206%" y="501" width="61.7411%" height="15" fill="rgb(207,226,32)" fg:x="297" fg:w="539"/><text x="34.2706%" y="511.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>&lt;atomicdatabase::database::backtracking::BacktrackingQuery as core::iter::traits::iterator::Iterator&gt;::next (539 samples, 61.74%)</title><rect x="34.0206%" y="485" width="61.7411%" height="15" fill="rgb(222,207,47)" fg:x="297" fg:w="539"/><text x="34.2706%" y="495.50">&lt;atomicdatabase::database::backtracking::BacktrackingQuery as core::iter::traits::iterator::Iterator&gt;:..</text></g><g><title>core::ptr::drop_in_place&lt;atomicdatabase::database::backtracking::PossibleBindings&gt; (3 samples, 0.34%)</title><rect x="95.4181%" y="469" width="0.3436%" height="15" fill="rgb(229,115,45)" fg:x="833" fg:w="3"/><text x="95.6681%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;atomicdatabase::database::backtracking::BacktrackingQuery,atomicdatabase::database::backtracking::reduce_and_eliminate_wrap::{{closure}}&gt;&gt; (2 samples, 0.23%)</title><rect x="95.5326%" y="453" width="0.2291%" height="15" fill="rgb(224,191,6)" fg:x="834" fg:w="2"/><text x="95.7826%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;atomicdatabase::database::backtracking::BacktrackingQuery&gt; (1 samples, 0.11%)</title><rect x="95.6472%" y="437" width="0.1145%" height="15" fill="rgb(230,227,24)" fg:x="835" fg:w="1"/><text x="95.8972%" y="447.50"></text></g><g><title>&lt;atomicdatabase::database::DBValue as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="95.7617%" y="389" width="0.1145%" height="15" fill="rgb(228,80,19)" fg:x="836" fg:w="1"/><text x="96.0117%" y="399.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="95.7617%" y="373" width="0.1145%" height="15" fill="rgb(247,229,0)" fg:x="836" fg:w="1"/><text x="96.0117%" y="383.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.11%)</title><rect x="95.7617%" y="357" width="0.1145%" height="15" fill="rgb(237,194,15)" fg:x="836" fg:w="1"/><text x="96.0117%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V&gt; as core::convert::From&lt;[(K,V): N]&gt;&gt;::from (1 samples, 0.11%)</title><rect x="95.8763%" y="373" width="0.1145%" height="15" fill="rgb(219,203,20)" fg:x="837" fg:w="1"/><text x="96.1263%" y="383.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="95.8763%" y="357" width="0.1145%" height="15" fill="rgb(234,128,8)" fg:x="837" fg:w="1"/><text x="96.1263%" y="367.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="95.9908%" y="373" width="0.1145%" height="15" fill="rgb(248,202,8)" fg:x="838" fg:w="1"/><text x="96.2408%" y="383.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="95.9908%" y="357" width="0.1145%" height="15" fill="rgb(206,104,37)" fg:x="838" fg:w="1"/><text x="96.2408%" y="367.50"></text></g><g><title>atomicdatabase::database::unification::unify_terms (4 samples, 0.46%)</title><rect x="95.7617%" y="405" width="0.4582%" height="15" fill="rgb(223,8,27)" fg:x="836" fg:w="4"/><text x="96.0117%" y="415.50"></text></g><g><title>atomicdatabase::database::unification::unify_variable_literal (3 samples, 0.34%)</title><rect x="95.8763%" y="389" width="0.3436%" height="15" fill="rgb(216,217,28)" fg:x="837" fg:w="3"/><text x="96.1263%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.11%)</title><rect x="96.1054%" y="373" width="0.1145%" height="15" fill="rgb(249,199,1)" fg:x="839" fg:w="1"/><text x="96.3554%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.57%)</title><rect x="95.7617%" y="469" width="0.5727%" height="15" fill="rgb(240,85,17)" fg:x="836" fg:w="5"/><text x="96.0117%" y="479.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.57%)</title><rect x="95.7617%" y="453" width="0.5727%" height="15" fill="rgb(206,108,45)" fg:x="836" fg:w="5"/><text x="96.0117%" y="463.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::InnerFactPossibilitiesIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.57%)</title><rect x="95.7617%" y="437" width="0.5727%" height="15" fill="rgb(245,210,41)" fg:x="836" fg:w="5"/><text x="96.0117%" y="447.50"></text></g><g><title>atomicdatabase::database::unification::lax_unify (5 samples, 0.57%)</title><rect x="95.7617%" y="421" width="0.5727%" height="15" fill="rgb(206,13,37)" fg:x="836" fg:w="5"/><text x="96.0117%" y="431.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="96.2199%" y="405" width="0.1145%" height="15" fill="rgb(250,61,18)" fg:x="840" fg:w="1"/><text x="96.4699%" y="415.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::BacktrackingQuery as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.69%)</title><rect x="95.7617%" y="501" width="0.6873%" height="15" fill="rgb(235,172,48)" fg:x="836" fg:w="6"/><text x="96.0117%" y="511.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.69%)</title><rect x="95.7617%" y="485" width="0.6873%" height="15" fill="rgb(249,201,17)" fg:x="836" fg:w="6"/><text x="96.0117%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="96.3345%" y="469" width="0.1145%" height="15" fill="rgb(219,208,6)" fg:x="841" fg:w="1"/><text x="96.5845%" y="479.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::BacktrackingQuery as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="96.3345%" y="453" width="0.1145%" height="15" fill="rgb(248,31,23)" fg:x="841" fg:w="1"/><text x="96.5845%" y="463.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="96.3345%" y="437" width="0.1145%" height="15" fill="rgb(245,15,42)" fg:x="841" fg:w="1"/><text x="96.5845%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="96.3345%" y="421" width="0.1145%" height="15" fill="rgb(222,217,39)" fg:x="841" fg:w="1"/><text x="96.5845%" y="431.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="96.3345%" y="405" width="0.1145%" height="15" fill="rgb(210,219,27)" fg:x="841" fg:w="1"/><text x="96.5845%" y="415.50"></text></g><g><title>&lt;atomicdatabase::database::backtracking::InnerFactPossibilitiesIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="96.3345%" y="389" width="0.1145%" height="15" fill="rgb(252,166,36)" fg:x="841" fg:w="1"/><text x="96.5845%" y="399.50"></text></g><g><title>atomicdatabase::database::unification::lax_unify (1 samples, 0.11%)</title><rect x="96.3345%" y="373" width="0.1145%" height="15" fill="rgb(245,132,34)" fg:x="841" fg:w="1"/><text x="96.5845%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="96.3345%" y="357" width="0.1145%" height="15" fill="rgb(236,54,3)" fg:x="841" fg:w="1"/><text x="96.5845%" y="367.50"></text></g><g><title>&lt;atomicdatabase::database::unification::ASTValue as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="96.4490%" y="501" width="0.1145%" height="15" fill="rgb(241,173,43)" fg:x="842" fg:w="1"/><text x="96.6990%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="96.4490%" y="485" width="0.1145%" height="15" fill="rgb(215,190,9)" fg:x="842" fg:w="1"/><text x="96.6990%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="96.4490%" y="469" width="0.1145%" height="15" fill="rgb(242,101,16)" fg:x="842" fg:w="1"/><text x="96.6990%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="96.4490%" y="453" width="0.1145%" height="15" fill="rgb(223,190,21)" fg:x="842" fg:w="1"/><text x="96.6990%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="96.4490%" y="437" width="0.1145%" height="15" fill="rgb(215,228,25)" fg:x="842" fg:w="1"/><text x="96.6990%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="96.4490%" y="421" width="0.1145%" height="15" fill="rgb(225,36,22)" fg:x="842" fg:w="1"/><text x="96.6990%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="96.4490%" y="405" width="0.1145%" height="15" fill="rgb(251,106,46)" fg:x="842" fg:w="1"/><text x="96.6990%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="96.4490%" y="389" width="0.1145%" height="15" fill="rgb(208,90,1)" fg:x="842" fg:w="1"/><text x="96.6990%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="96.4490%" y="373" width="0.1145%" height="15" fill="rgb(243,10,4)" fg:x="842" fg:w="1"/><text x="96.6990%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="96.4490%" y="357" width="0.1145%" height="15" fill="rgb(212,137,27)" fg:x="842" fg:w="1"/><text x="96.6990%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="96.4490%" y="341" width="0.1145%" height="15" fill="rgb(231,220,49)" fg:x="842" fg:w="1"/><text x="96.6990%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="96.4490%" y="325" width="0.1145%" height="15" fill="rgb(237,96,20)" fg:x="842" fg:w="1"/><text x="96.6990%" y="335.50"></text></g><g><title>malloc (1 samples, 0.11%)</title><rect x="96.4490%" y="309" width="0.1145%" height="15" fill="rgb(239,229,30)" fg:x="842" fg:w="1"/><text x="96.6990%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="96.5636%" y="501" width="0.1145%" height="15" fill="rgb(219,65,33)" fg:x="843" fg:w="1"/><text x="96.8136%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.11%)</title><rect x="96.6781%" y="485" width="0.1145%" height="15" fill="rgb(243,134,7)" fg:x="844" fg:w="1"/><text x="96.9281%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.11%)</title><rect x="96.6781%" y="469" width="0.1145%" height="15" fill="rgb(216,177,54)" fg:x="844" fg:w="1"/><text x="96.9281%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="96.6781%" y="453" width="0.1145%" height="15" fill="rgb(211,160,20)" fg:x="844" fg:w="1"/><text x="96.9281%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="96.6781%" y="437" width="0.1145%" height="15" fill="rgb(239,85,39)" fg:x="844" fg:w="1"/><text x="96.9281%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="96.6781%" y="421" width="0.1145%" height="15" fill="rgb(232,125,22)" fg:x="844" fg:w="1"/><text x="96.9281%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.11%)</title><rect x="96.6781%" y="405" width="0.1145%" height="15" fill="rgb(244,57,34)" fg:x="844" fg:w="1"/><text x="96.9281%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="96.6781%" y="389" width="0.1145%" height="15" fill="rgb(214,203,32)" fg:x="844" fg:w="1"/><text x="96.9281%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="96.6781%" y="373" width="0.1145%" height="15" fill="rgb(207,58,43)" fg:x="844" fg:w="1"/><text x="96.9281%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.11%)</title><rect x="96.6781%" y="357" width="0.1145%" height="15" fill="rgb(215,193,15)" fg:x="844" fg:w="1"/><text x="96.9281%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.11%)</title><rect x="96.6781%" y="341" width="0.1145%" height="15" fill="rgb(232,15,44)" fg:x="844" fg:w="1"/><text x="96.9281%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="96.9072%" y="469" width="0.1145%" height="15" fill="rgb(212,3,48)" fg:x="846" fg:w="1"/><text x="97.1572%" y="479.50"></text></g><g><title>&lt;atomicdatabase::database::unification::ASTValue as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="96.9072%" y="453" width="0.1145%" height="15" fill="rgb(218,128,7)" fg:x="846" fg:w="1"/><text x="97.1572%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="96.9072%" y="437" width="0.1145%" height="15" fill="rgb(226,216,39)" fg:x="846" fg:w="1"/><text x="97.1572%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="96.9072%" y="421" width="0.1145%" height="15" fill="rgb(243,47,51)" fg:x="846" fg:w="1"/><text x="97.1572%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="96.9072%" y="405" width="0.1145%" height="15" fill="rgb(241,183,40)" fg:x="846" fg:w="1"/><text x="97.1572%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="96.9072%" y="389" width="0.1145%" height="15" fill="rgb(231,217,32)" fg:x="846" fg:w="1"/><text x="97.1572%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="96.9072%" y="373" width="0.1145%" height="15" fill="rgb(229,61,38)" fg:x="846" fg:w="1"/><text x="97.1572%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="96.9072%" y="357" width="0.1145%" height="15" fill="rgb(225,210,5)" fg:x="846" fg:w="1"/><text x="97.1572%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="96.9072%" y="341" width="0.1145%" height="15" fill="rgb(231,79,45)" fg:x="846" fg:w="1"/><text x="97.1572%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="96.9072%" y="325" width="0.1145%" height="15" fill="rgb(224,100,7)" fg:x="846" fg:w="1"/><text x="97.1572%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="96.9072%" y="309" width="0.1145%" height="15" fill="rgb(241,198,18)" fg:x="846" fg:w="1"/><text x="97.1572%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="96.9072%" y="293" width="0.1145%" height="15" fill="rgb(252,97,53)" fg:x="846" fg:w="1"/><text x="97.1572%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="96.9072%" y="277" width="0.1145%" height="15" fill="rgb(220,88,7)" fg:x="846" fg:w="1"/><text x="97.1572%" y="287.50"></text></g><g><title>malloc (1 samples, 0.11%)</title><rect x="96.9072%" y="261" width="0.1145%" height="15" fill="rgb(213,176,14)" fg:x="846" fg:w="1"/><text x="97.1572%" y="271.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="96.9072%" y="245" width="0.1145%" height="15" fill="rgb(246,73,7)" fg:x="846" fg:w="1"/><text x="97.1572%" y="255.50"></text></g><g><title>atomicdatabase::database::unification::unify_terms (3 samples, 0.34%)</title><rect x="96.7927%" y="485" width="0.3436%" height="15" fill="rgb(245,64,36)" fg:x="845" fg:w="3"/><text x="97.0427%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.11%)</title><rect x="97.0218%" y="469" width="0.1145%" height="15" fill="rgb(245,80,10)" fg:x="847" fg:w="1"/><text x="97.2718%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="97.0218%" y="453" width="0.1145%" height="15" fill="rgb(232,107,50)" fg:x="847" fg:w="1"/><text x="97.2718%" y="463.50"></text></g><g><title>atomicdatabase::database::unification::unify_get_variable_value (5 samples, 0.57%)</title><rect x="96.6781%" y="501" width="0.5727%" height="15" fill="rgb(253,3,0)" fg:x="844" fg:w="5"/><text x="96.9281%" y="511.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="97.1363%" y="485" width="0.1145%" height="15" fill="rgb(212,99,53)" fg:x="848" fg:w="1"/><text x="97.3863%" y="495.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="97.1363%" y="469" width="0.1145%" height="15" fill="rgb(249,111,54)" fg:x="848" fg:w="1"/><text x="97.3863%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.60%)</title><rect x="95.7617%" y="517" width="1.6037%" height="15" fill="rgb(249,55,30)" fg:x="836" fg:w="14"/><text x="96.0117%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="97.2509%" y="501" width="0.1145%" height="15" fill="rgb(237,47,42)" fg:x="849" fg:w="1"/><text x="97.5009%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.11%)</title><rect x="97.2509%" y="485" width="0.1145%" height="15" fill="rgb(211,20,18)" fg:x="849" fg:w="1"/><text x="97.5009%" y="495.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17hc74b6d940613d662E.llvm.15422632318813216770 (1 samples, 0.11%)</title><rect x="97.2509%" y="469" width="0.1145%" height="15" fill="rgb(231,203,46)" fg:x="849" fg:w="1"/><text x="97.5009%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.11%)</title><rect x="97.2509%" y="453" width="0.1145%" height="15" fill="rgb(237,142,3)" fg:x="849" fg:w="1"/><text x="97.5009%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="97.3654%" y="341" width="0.1145%" height="15" fill="rgb(241,107,1)" fg:x="850" fg:w="1"/><text x="97.6154%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="97.3654%" y="325" width="0.1145%" height="15" fill="rgb(229,83,13)" fg:x="850" fg:w="1"/><text x="97.6154%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.11%)</title><rect x="97.3654%" y="309" width="0.1145%" height="15" fill="rgb(241,91,40)" fg:x="850" fg:w="1"/><text x="97.6154%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="97.3654%" y="293" width="0.1145%" height="15" fill="rgb(225,3,45)" fg:x="850" fg:w="1"/><text x="97.6154%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="97.3654%" y="277" width="0.1145%" height="15" fill="rgb(244,223,14)" fg:x="850" fg:w="1"/><text x="97.6154%" y="287.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="97.3654%" y="261" width="0.1145%" height="15" fill="rgb(224,124,37)" fg:x="850" fg:w="1"/><text x="97.6154%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="97.3654%" y="245" width="0.1145%" height="15" fill="rgb(251,171,30)" fg:x="850" fg:w="1"/><text x="97.6154%" y="255.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.23%)</title><rect x="97.3654%" y="485" width="0.2291%" height="15" fill="rgb(236,46,54)" fg:x="850" fg:w="2"/><text x="97.6154%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.23%)</title><rect x="97.3654%" y="469" width="0.2291%" height="15" fill="rgb(245,213,5)" fg:x="850" fg:w="2"/><text x="97.6154%" y="479.50"></text></g><g><title>core::fmt::write (2 samples, 0.23%)</title><rect x="97.3654%" y="453" width="0.2291%" height="15" fill="rgb(230,144,27)" fg:x="850" fg:w="2"/><text x="97.6154%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.23%)</title><rect x="97.3654%" y="437" width="0.2291%" height="15" fill="rgb(220,86,6)" fg:x="850" fg:w="2"/><text x="97.6154%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.23%)</title><rect x="97.3654%" y="421" width="0.2291%" height="15" fill="rgb(240,20,13)" fg:x="850" fg:w="2"/><text x="97.6154%" y="431.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.23%)</title><rect x="97.3654%" y="405" width="0.2291%" height="15" fill="rgb(217,89,34)" fg:x="850" fg:w="2"/><text x="97.6154%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.23%)</title><rect x="97.3654%" y="389" width="0.2291%" height="15" fill="rgb(229,13,5)" fg:x="850" fg:w="2"/><text x="97.6154%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.23%)</title><rect x="97.3654%" y="373" width="0.2291%" height="15" fill="rgb(244,67,35)" fg:x="850" fg:w="2"/><text x="97.6154%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.23%)</title><rect x="97.3654%" y="357" width="0.2291%" height="15" fill="rgb(221,40,2)" fg:x="850" fg:w="2"/><text x="97.6154%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="97.4800%" y="341" width="0.1145%" height="15" fill="rgb(237,157,21)" fg:x="851" fg:w="1"/><text x="97.7300%" y="351.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="97.4800%" y="325" width="0.1145%" height="15" fill="rgb(222,94,11)" fg:x="851" fg:w="1"/><text x="97.7300%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="97.5945%" y="469" width="0.2291%" height="15" fill="rgb(249,113,6)" fg:x="852" fg:w="2"/><text x="97.8445%" y="479.50"></text></g><g><title>atomicdatabase::database::unification::unify_terms (1 samples, 0.11%)</title><rect x="97.8236%" y="469" width="0.1145%" height="15" fill="rgb(238,137,36)" fg:x="854" fg:w="1"/><text x="98.0736%" y="479.50"></text></g><g><title>atomicdatabase::database::unification::unify_variable_literal (1 samples, 0.11%)</title><rect x="97.8236%" y="453" width="0.1145%" height="15" fill="rgb(210,102,26)" fg:x="854" fg:w="1"/><text x="98.0736%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="97.8236%" y="437" width="0.1145%" height="15" fill="rgb(218,30,30)" fg:x="854" fg:w="1"/><text x="98.0736%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.23%)</title><rect x="97.9381%" y="469" width="0.2291%" height="15" fill="rgb(214,67,26)" fg:x="855" fg:w="2"/><text x="98.1881%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.23%)</title><rect x="97.9381%" y="453" width="0.2291%" height="15" fill="rgb(251,9,53)" fg:x="855" fg:w="2"/><text x="98.1881%" y="463.50"></text></g><g><title>atomicdatabase::database::unification::unify_terms (6 samples, 0.69%)</title><rect x="97.5945%" y="485" width="0.6873%" height="15" fill="rgb(228,204,25)" fg:x="852" fg:w="6"/><text x="97.8445%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="98.1672%" y="469" width="0.1145%" height="15" fill="rgb(207,153,8)" fg:x="857" fg:w="1"/><text x="98.4172%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.11%)</title><rect x="98.1672%" y="453" width="0.1145%" height="15" fill="rgb(242,9,16)" fg:x="857" fg:w="1"/><text x="98.4172%" y="463.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17hc74b6d940613d662E.llvm.15422632318813216770 (1 samples, 0.11%)</title><rect x="98.1672%" y="437" width="0.1145%" height="15" fill="rgb(217,211,10)" fg:x="857" fg:w="1"/><text x="98.4172%" y="447.50"></text></g><g><title>malloc (1 samples, 0.11%)</title><rect x="98.1672%" y="421" width="0.1145%" height="15" fill="rgb(219,228,52)" fg:x="857" fg:w="1"/><text x="98.4172%" y="431.50"></text></g><g><title>atomicdatabase::explore_query (661 samples, 75.72%)</title><rect x="22.6804%" y="613" width="75.7159%" height="15" fill="rgb(231,92,29)" fg:x="198" fg:w="661"/><text x="22.9304%" y="623.50">atomicdatabase::explore_query</text></g><g><title>&lt;atomicdatabase::database::backtracking::BacktrackingQuery as core::iter::traits::iterator::Iterator&gt;::next (661 samples, 75.72%)</title><rect x="22.6804%" y="597" width="75.7159%" height="15" fill="rgb(232,8,23)" fg:x="198" fg:w="661"/><text x="22.9304%" y="607.50">&lt;atomicdatabase::database::backtracking::BacktrackingQuery as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (661 samples, 75.72%)</title><rect x="22.6804%" y="581" width="75.7159%" height="15" fill="rgb(216,211,34)" fg:x="198" fg:w="661"/><text x="22.9304%" y="591.50">&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (563 samples, 64.49%)</title><rect x="33.9061%" y="565" width="64.4903%" height="15" fill="rgb(236,151,0)" fg:x="296" fg:w="563"/><text x="34.1561%" y="575.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>&lt;atomicdatabase::database::backtracking::BacktrackingQuery as core::iter::traits::iterator::Iterator&gt;::next (563 samples, 64.49%)</title><rect x="33.9061%" y="549" width="64.4903%" height="15" fill="rgb(209,168,3)" fg:x="296" fg:w="563"/><text x="34.1561%" y="559.50">&lt;atomicdatabase::database::backtracking::BacktrackingQuery as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next (562 samples, 64.38%)</title><rect x="34.0206%" y="533" width="64.3757%" height="15" fill="rgb(208,129,28)" fg:x="297" fg:w="562"/><text x="34.2706%" y="543.50">&lt;atomicdatabase::database::backtracking::PossibleBindings as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>atomicdatabase::database::backtracking::split_arguments (9 samples, 1.03%)</title><rect x="97.3654%" y="517" width="1.0309%" height="15" fill="rgb(229,78,22)" fg:x="850" fg:w="9"/><text x="97.6154%" y="527.50"></text></g><g><title>atomicdatabase::database::unification::unify_get_variable_value (9 samples, 1.03%)</title><rect x="97.3654%" y="501" width="1.0309%" height="15" fill="rgb(228,187,13)" fg:x="850" fg:w="9"/><text x="97.6154%" y="511.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="98.2818%" y="485" width="0.1145%" height="15" fill="rgb(240,119,24)" fg:x="858" fg:w="1"/><text x="98.5318%" y="495.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="98.2818%" y="469" width="0.1145%" height="15" fill="rgb(209,194,42)" fg:x="858" fg:w="1"/><text x="98.5318%" y="479.50"></text></g><g><title>__libc_start_main@@GLIBC_2.34 (663 samples, 75.95%)</title><rect x="22.5659%" y="853" width="75.9450%" height="15" fill="rgb(247,200,46)" fg:x="197" fg:w="663"/><text x="22.8159%" y="863.50">__libc_start_main@@GLIBC_2.34</text></g><g><title>__libc_start_call_main (663 samples, 75.95%)</title><rect x="22.5659%" y="837" width="75.9450%" height="15" fill="rgb(218,76,16)" fg:x="197" fg:w="663"/><text x="22.8159%" y="847.50">__libc_start_call_main</text></g><g><title>main (663 samples, 75.95%)</title><rect x="22.5659%" y="821" width="75.9450%" height="15" fill="rgb(225,21,48)" fg:x="197" fg:w="663"/><text x="22.8159%" y="831.50">main</text></g><g><title>std::rt::lang_start_internal (663 samples, 75.95%)</title><rect x="22.5659%" y="805" width="75.9450%" height="15" fill="rgb(239,223,50)" fg:x="197" fg:w="663"/><text x="22.8159%" y="815.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (663 samples, 75.95%)</title><rect x="22.5659%" y="789" width="75.9450%" height="15" fill="rgb(244,45,21)" fg:x="197" fg:w="663"/><text x="22.8159%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (663 samples, 75.95%)</title><rect x="22.5659%" y="773" width="75.9450%" height="15" fill="rgb(232,33,43)" fg:x="197" fg:w="663"/><text x="22.8159%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (663 samples, 75.95%)</title><rect x="22.5659%" y="757" width="75.9450%" height="15" fill="rgb(209,8,3)" fg:x="197" fg:w="663"/><text x="22.8159%" y="767.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (663 samples, 75.95%)</title><rect x="22.5659%" y="741" width="75.9450%" height="15" fill="rgb(214,25,53)" fg:x="197" fg:w="663"/><text x="22.8159%" y="751.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (663 samples, 75.95%)</title><rect x="22.5659%" y="725" width="75.9450%" height="15" fill="rgb(254,186,54)" fg:x="197" fg:w="663"/><text x="22.8159%" y="735.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (663 samples, 75.95%)</title><rect x="22.5659%" y="709" width="75.9450%" height="15" fill="rgb(208,174,49)" fg:x="197" fg:w="663"/><text x="22.8159%" y="719.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (663 samples, 75.95%)</title><rect x="22.5659%" y="693" width="75.9450%" height="15" fill="rgb(233,191,51)" fg:x="197" fg:w="663"/><text x="22.8159%" y="703.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (663 samples, 75.95%)</title><rect x="22.5659%" y="677" width="75.9450%" height="15" fill="rgb(222,134,10)" fg:x="197" fg:w="663"/><text x="22.8159%" y="687.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h4cb6827c65e6bdb8E.llvm.5930024792420821784 (663 samples, 75.95%)</title><rect x="22.5659%" y="661" width="75.9450%" height="15" fill="rgb(230,226,20)" fg:x="197" fg:w="663"/><text x="22.8159%" y="671.50">_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h4cb6827c65e6bdb8E.llvm.5930024792420821784</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (663 samples, 75.95%)</title><rect x="22.5659%" y="645" width="75.9450%" height="15" fill="rgb(251,111,25)" fg:x="197" fg:w="663"/><text x="22.8159%" y="655.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>atomicdatabase::main (663 samples, 75.95%)</title><rect x="22.5659%" y="629" width="75.9450%" height="15" fill="rgb(224,40,46)" fg:x="197" fg:w="663"/><text x="22.8159%" y="639.50">atomicdatabase::main</text></g><g><title>std::io::stdio::_print (1 samples, 0.11%)</title><rect x="98.3963%" y="613" width="0.1145%" height="15" fill="rgb(236,108,47)" fg:x="859" fg:w="1"/><text x="98.6463%" y="623.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.11%)</title><rect x="98.3963%" y="597" width="0.1145%" height="15" fill="rgb(234,93,0)" fg:x="859" fg:w="1"/><text x="98.6463%" y="607.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.11%)</title><rect x="98.3963%" y="581" width="0.1145%" height="15" fill="rgb(224,213,32)" fg:x="859" fg:w="1"/><text x="98.6463%" y="591.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.11%)</title><rect x="98.3963%" y="565" width="0.1145%" height="15" fill="rgb(251,11,48)" fg:x="859" fg:w="1"/><text x="98.6463%" y="575.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.11%)</title><rect x="98.3963%" y="549" width="0.1145%" height="15" fill="rgb(236,173,5)" fg:x="859" fg:w="1"/><text x="98.6463%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="98.3963%" y="533" width="0.1145%" height="15" fill="rgb(230,95,12)" fg:x="859" fg:w="1"/><text x="98.6463%" y="543.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.11%)</title><rect x="98.3963%" y="517" width="0.1145%" height="15" fill="rgb(232,209,1)" fg:x="859" fg:w="1"/><text x="98.6463%" y="527.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.11%)</title><rect x="98.3963%" y="501" width="0.1145%" height="15" fill="rgb(232,6,1)" fg:x="859" fg:w="1"/><text x="98.6463%" y="511.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="98.3963%" y="485" width="0.1145%" height="15" fill="rgb(210,224,50)" fg:x="859" fg:w="1"/><text x="98.6463%" y="495.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="98.3963%" y="469" width="0.1145%" height="15" fill="rgb(228,127,35)" fg:x="859" fg:w="1"/><text x="98.6463%" y="479.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="98.3963%" y="453" width="0.1145%" height="15" fill="rgb(245,102,45)" fg:x="859" fg:w="1"/><text x="98.6463%" y="463.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="98.3963%" y="437" width="0.1145%" height="15" fill="rgb(214,1,49)" fg:x="859" fg:w="1"/><text x="98.6463%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="98.3963%" y="421" width="0.1145%" height="15" fill="rgb(226,163,40)" fg:x="859" fg:w="1"/><text x="98.6463%" y="431.50"></text></g><g><title>_start (668 samples, 76.52%)</title><rect x="22.1077%" y="869" width="76.5178%" height="15" fill="rgb(239,212,28)" fg:x="193" fg:w="668"/><text x="22.3577%" y="879.50">_start</text></g><g><title>_dl_start (1 samples, 0.11%)</title><rect x="98.5109%" y="853" width="0.1145%" height="15" fill="rgb(220,20,13)" fg:x="860" fg:w="1"/><text x="98.7609%" y="863.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.11%)</title><rect x="98.5109%" y="837" width="0.1145%" height="15" fill="rgb(210,164,35)" fg:x="860" fg:w="1"/><text x="98.7609%" y="847.50"></text></g><g><title>init_cpu_features.constprop.0 (1 samples, 0.11%)</title><rect x="98.5109%" y="821" width="0.1145%" height="15" fill="rgb(248,109,41)" fg:x="860" fg:w="1"/><text x="98.7609%" y="831.50"></text></g><g><title>update_active.constprop.0 (1 samples, 0.11%)</title><rect x="98.5109%" y="805" width="0.1145%" height="15" fill="rgb(238,23,50)" fg:x="860" fg:w="1"/><text x="98.7609%" y="815.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.11%)</title><rect x="98.6254%" y="869" width="0.1145%" height="15" fill="rgb(211,48,49)" fg:x="861" fg:w="1"/><text x="98.8754%" y="879.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.69%)</title><rect x="98.7400%" y="869" width="0.6873%" height="15" fill="rgb(223,36,21)" fg:x="862" fg:w="6"/><text x="98.9900%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;atomicdatabase::database::unification::ASTValue&gt; (1 samples, 0.11%)</title><rect x="99.4273%" y="869" width="0.1145%" height="15" fill="rgb(207,123,46)" fg:x="868" fg:w="1"/><text x="99.6773%" y="879.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (1 samples, 0.11%)</title><rect x="99.5418%" y="869" width="0.1145%" height="15" fill="rgb(240,218,32)" fg:x="869" fg:w="1"/><text x="99.7918%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.11%)</title><rect x="99.6564%" y="869" width="0.1145%" height="15" fill="rgb(252,5,43)" fg:x="870" fg:w="1"/><text x="99.9064%" y="879.50"></text></g><g><title>all (873 samples, 100%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(252,84,19)" fg:x="0" fg:w="873"/><text x="0.2500%" y="911.50"></text></g><g><title>atomicdatabase (873 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(243,152,39)" fg:x="0" fg:w="873"/><text x="0.2500%" y="895.50">atomicdatabase</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (2 samples, 0.23%)</title><rect x="99.7709%" y="869" width="0.2291%" height="15" fill="rgb(234,160,15)" fg:x="871" fg:w="2"/><text x="100.0209%" y="879.50"></text></g></svg></svg>